{

   "swagger": "2.0",

  "info" : {
    "description" : "The Infinity Onboarding app enables customers to open new accounts in a bank across multiple channels. The Experience APIs in Onboarding help in establishing communication between Client application, Quantum Fabric, Journey Manager, and the core backend system. These APIs allow you to perform various CRUD operations such as creating a profile, verifying an application by using IDology, funding operations, and so on.",
    "version" : "1.0",
    "title" : "OnBoardingSpecificAPIs"
  },
  "host" : "vivekiyer1.konycloud.com/services",
  "basePath" : "/data/v1/OnBoarding/objects",
  "tags" : [ {
    "name" : "Account"
  }, {
    "name" : "AddressInfo"
  }, {
    "name" : "Application"
  }, {
    "name" : "Funding"
  }, {
    "name" : "IdentityInfo"
  }, {
    "name" : "IDV"
  }, {
    "name" : "PersonalInfo"
  }, {
    "name" : "ProductDashboard"
  }, {
    "name" : "ProductSelection"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/Funding/getFundingProducts" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API retrieves the products that are selected by the user for funding. This API is used to re-populate the data, while the user navigates back to the client app.",
        "operationId" : "getFundingProductsFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/PersonalInfo/getPersonalInfo" : {
      "post" : {
        "tags" : [ "PersonalInfo" ],
        "summary" : "This API is a client saving service that fetches the user's personal information such as First Name, Last Name, Date of Birth, and Email ID.",
        "operationId" : "getPersonalInfoPersonalInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonalInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductSelection/getProductSelection" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "This API fetches all the selected products from the Journey Manager. Journey Manager is used to store the product data.",
        "operationId" : "getProductSelectionProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductDashboard/getProductDetails" : {
      "post" : {
        "tags" : [ "ProductDashboard" ],
        "summary" : "This API fetches the details of the product that is selected, when the learn more (product group page) onClick action is triggered. The API populates the response on the frmProductDetails page.",
        "operationId" : "getProductDetailsProductDashboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductDashboard"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Funding/updateFundingAllocation" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API updates the products that were selected by the user for funding. It also updates the amount that the user decided to fund these products.",
        "operationId" : "updateFundingAllocationFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/resumeOnBoardingApplication" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "",
        "operationId" : "resumeOnBoardingApplicationApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/submitOnBoardingApplication" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API is a service that creates an application in the Journey Manager based on the provided request parameters such as Application_id, DateOfBirth, and so on",
        "operationId" : "submitOnBoardingApplicationApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Funding/createFunding" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API creates a funding application in the Journey Manager (a separate JS module in the Journey manager). The data that is passed to the Journey Manager includes the parent application ID.",
        "operationId" : "createFundingFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/IdentityInfo/getIdentityInfo" : {
      "post" : {
        "tags" : [ "IdentityInfo" ],
        "summary" : "This API is a client saving service that is used to fetch the details from the Identity Information section in the Onboarding application.",
        "operationId" : "getIdentityInfoIdentityInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdentityInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/getApplication" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "",
        "operationId" : "getApplicationApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/AddressInfo/getAddressInfo" : {
      "post" : {
        "tags" : [ "AddressInfo" ],
        "summary" : "This API is a client saving service that fetches the details provided in the Address Information section such as city, state, and zip code. This API is used to fetch the address detail during the application registration process",
        "operationId" : "getAddressInfoAddressInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddressInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductSelection" : { },
    "/Application" : { },
    "/Application/createApplication" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API is a service that creates an application in the Journey Manager.",
        "operationId" : "createApplicationApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/IdentityInfo/updateIdentityInfo" : {
      "post" : {
        "tags" : [ "IdentityInfo" ],
        "summary" : "This API is a client saving service that updates the Identity information section in the Onboarding application with details such as ID Type, ID Number, Issued Date, Issued State, and Expiration Date.",
        "operationId" : "updateIdentityInfoIdentityInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IdentityInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/IDV/executeIDV" : {
      "post" : {
        "tags" : [ "IDV" ],
        "summary" : "This API executes the identity verification module of an applicant by leveraging a third-party service called Idology. Based on the execution, the API might return a few security questions to complete the identity verification process. Based on the user's response to these questions, identity verification is completed.",
        "operationId" : "executeIDVIDV",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IDV"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/PersonalInfo/createProspectProfile" : {
      "post" : {
        "tags" : [ "PersonalInfo" ],
        "summary" : "Journey Manager acts as an in-flight application storage unit. This API creates a prospect for an applicant in the Journey Manager and saves the applicant's personal information in the Journey Manager.",
        "operationId" : "createProspectProfilePersonalInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonalInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductDashboard" : { },
    "/Funding/getFundingType" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API fetches the funding type that is set by the user. Inter Bank Funding and Intra Bank Funding are the two funding types that are used in the Funding module. Intra, Inter and Manual (Provide bank details manually)",
        "operationId" : "getFundingTypeFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductSelection/getProductsForPurpose" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "This API fetches the marketing information of all the products that are used for a specific purpose. When a customer specifies the purpose or provides requirements for a product, this API can be leveraged to display various types of products that are based on his purpose or requirement.",
        "operationId" : "getProductsForPurposeProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/PersonalInfo/createCoApplicant" : {
      "post" : {
        "tags" : [ "PersonalInfo" ],
        "summary" : "This API creates a prospect for the co-applicant and saves the co-applicant's personal information in the Journey Manager.",
        "operationId" : "createCoApplicantPersonalInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonalInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/updateApplication" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API invokes the rules engines with the individual decision of the applicant and co-applicant to obtain the application status. After the API obtains the individual decisions, it submits the application to the Journey Manager.",
        "operationId" : "updateApplicationApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/IDV" : { },
    "/ProductSelection/updateProductSelection" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "This API updates the selected products to the Journey Manager; and the Product IDs to Infinity.",
        "operationId" : "updateProductSelectionProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Funding/getProductsSelected" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API retrieves the product that is selected by the user based on the application ID. The product is retrieved from the customer application and the Party back-end system.",
        "operationId" : "getProductsSelectedFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Account" : { },
    "/Funding/updateFundingType" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API updates the type of funding used to fund the selected products. Inter Bank Funding and Intra Bank Funding are the two funding types used by the Funding module.",
        "operationId" : "updateFundingTypeFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Funding" : { },
    "/ProductSelection/updateProductSelectionHierarchy" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "Journey Manager is used for storing the onboarding data of the customer. This API updates the product and product feature data to the Journey Manager. This API is different from updateProductSelection as updateProductSelection API updates only the product data.",
        "operationId" : "updateProductSelectionHierarchyProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductDashboard/getProductGroupsWithPurpose" : {
      "post" : {
        "tags" : [ "ProductDashboard" ],
        "summary" : "This API fetches the list of product groups. The product groups are displayed as cards on the landing page and the hamburger menu.",
        "operationId" : "getProductGroupsWithPurposeProductDashboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductDashboard"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/signoutOnboardingApplication" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API captures the audit logs at the time of logout and idle time out. These logs contain the details of user's activity and are used for audit purpose.",
        "operationId" : "signoutOnboardingApplicationApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Funding/updatePaymentDetails" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API updates the payment details for the funding request. The payment details include information such as account type, debit account number, routing number, and currency.",
        "operationId" : "updatePaymentDetailsFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/IDV/verifyIDVResponses" : {
      "post" : {
        "tags" : [ "IDV" ],
        "summary" : "This API leverages the Idology service to verify the response or answers to the identity verification questions provided by the user.",
        "operationId" : "verifyIDVResponsesIDV",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/IDV"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Funding/updateFundingStatus" : {
      "post" : {
        "tags" : [ "Funding" ],
        "summary" : "This API updates the status of the funding application in the Funding module of the Journey Manager. The possible values for the funding status are Initiated, OptedOut, and Opted.",
        "operationId" : "updateFundingStatusFunding",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Funding"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/AddressInfo/updateAddressInfo" : {
      "post" : {
        "tags" : [ "AddressInfo" ],
        "summary" : "This API is a client saving service that updates the address information of the user. This API is used when the customer wants to update the address details in the application",
        "operationId" : "updateAddressInfoAddressInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/AddressInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/PersonalInfo/updatePersonalInfo" : {
      "post" : {
        "tags" : [ "PersonalInfo" ],
        "summary" : "This API is a client saving service that updates the Personal Info section with the information of applicants and co-applicants. This information contains the details such as First Name, Last Name, Date of Birth, Mobile Number, and Email ID of an applicant or a co-applicant.",
        "operationId" : "updatePersonalInfoPersonalInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonalInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductSelection/getFeaturesForProducts" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "The API fetches the list of features that must be retrieved for the given product IDs from the Marketing Catalog microservice.",
        "operationId" : "getFeaturesForProductsProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductSelection/getProductSelectionHierarchy" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "This API fetches the product and product features data from the Journey Manager. This API is different from getProductSelection as getProductSelection API fetches only the data of products.",
        "operationId" : "getProductSelectionHierarchyProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/PersonalInfo" : { },
    "/PersonalInfo/updateProspectProfile" : {
      "post" : {
        "tags" : [ "PersonalInfo" ],
        "summary" : "Journey Manager acts as an in-flight application storage unit. Whenever the user submits the details during the process of application creation, the udpateProspectProfile API updates the Journey Manager with these details. The updated information of the Journey Manager is stored in the form of XML data.",
        "operationId" : "updateProspectProfilePersonalInfo",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/PersonalInfo"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/decryptResumeLink" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API retrieves and de-crypts the URL that is required to resume the process of application creation.",
        "operationId" : "decryptResumeLinkApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/IdentityInfo" : { },
    "/AddressInfo" : { },
    "/Application/updateLastEditedSection" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API updates the last edited section in the Onboarding application with the latest changes.",
        "operationId" : "updateLastEditedSectionApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductSelection/getProductList" : {
      "post" : {
        "tags" : [ "ProductSelection" ],
        "summary" : "This API fetches the marketing information of all the products from all the product groups in every product line. When a customer wants to view the entire range of available products at once, this API can be leveraged to fetch and display the details of all the products. The fetched data can also be massaged or modulated before displaying to the customer by using a postprocessor or preprocessor code in Quantum Fabric.",
        "operationId" : "getProductListProductSelection",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/ProductDashboard/getProductsFromProductGroup" : {
      "post" : {
        "tags" : [ "ProductDashboard" ],
        "summary" : "This API fetches the list of products that are part of a product group. The list is displayed on the frmProductGroup page.",
        "operationId" : "getProductsFromProductGroupProductDashboard",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/ProductDashboard"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Application/getJMApplicationData" : {
      "post" : {
        "tags" : [ "Application" ],
        "summary" : "This API retrieves the application data of the Journey Manager. The Journey Manager contains the data that the user submitted while creating an application. In addition, it also contains details such as the application status, meta data, and start time of the application.",
        "operationId" : "getJMApplicationDataApplication",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Application"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
    "/Account/getHoldings" : {
      "post" : {
        "tags" : [ "Account" ],
        "summary" : "",
        "operationId" : "getHoldingsAccount",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Account"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
	
	    "/getFunctionalFlowConfiguration" : {
      "post" : {
        "tags" : [ "OnboardingC360Services" ],
        "summary" : "",
        "operationId" : "getFunctionalFlowConfiguration",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Request_OnboardingC360Services_getFunctionalFlowConfiguration"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_OnboardingC360Services_getFunctionalFlowConfiguration"
            }
          }
        }
      }
    },
    "/getCountries" : {
      "post" : {
        "tags" : [ "OnboardingC360Services" ],
        "summary" : "This API retrieves the list of all the countries from the Spotlight app for the customer to select.",
        "operationId" : "getCountries",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_OnboardingC360Services_getCountries"
            }
          }
        }
      }
    },
    "/getUsernameAndPasswordRulesAndPolicies" : {
      "post" : {
        "tags" : [ "OnboardingC360Services" ],
        "summary" : "",
        "operationId" : "getUsernameAndPasswordRulesAndPolicies",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_OnboardingC360Services_getUsernameAndPasswordRulesAndPolicies"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/Ping" : {
      "post" : {
        "tags" : [ "OnboardingC360Services" ],
        "summary" : "",
        "operationId" : "Ping",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Request_OnboardingC360Services_Ping"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_OnboardingC360Services_Ping"
            }
          }
        },
        "security" : [ {
          "basic" : [ ]
        } ]
      }
    },
    "/getRegions" : {
      "post" : {
        "tags" : [ "OnboardingC360Services" ],
        "summary" : "This API fetches all the regions within a country from the Spotlight app for the customer to select during the onboarding process",
        "operationId" : "getRegions",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_OnboardingC360Services_getRegions"
            }
          }
        }
      }
    },
	
	    "/ExecuteIDV" : {
      "post" : {
        "tags" : [ "IDVOrchestration" ],
        "summary" : "",
        "operationId" : "ExecuteIDV",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Request_IDVOrchestration_ExecuteIDV"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_IDVOrchestration_ExecuteIDV"
            }
          }
        }
      }
    },
	
	    "/Documents" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "POST (create)",
        "operationId" : "createDocuments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Documents"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Documents"
            }
          }
        }
      }
    },
    "/SelfieVerify" : {
      "post" : {
        "tags" : [ "SelfieVerify" ],
        "summary" : "POST (create)",
        "operationId" : "createSelfieVerify",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SelfieVerify"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_SelfieVerify"
            }
          }
        }
      }
    },
    "/Documents/verifyDocuments" : {
      "post" : {
        "tags" : [ "Documents" ],
        "summary" : "This API retrieves the details of the uploaded/scanned documents.",
        "operationId" : "verifyDocumentsDocuments",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Documents"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    },
    "/SelfieVerify/verifySelfie" : {
      "post" : {
        "tags" : [ "SelfieVerify" ],
        "summary" : "This API verifies your photograph that you captured for the identity verification purpose.",
        "operationId" : "verifySelfieSelfieVerify",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "X-Kony-Authorization",
          "in" : "header",
          "description" : "This service invocation requires authentication.",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/SelfieVerify"
          }
        } ],
        "responses" : {
          "200" : {
            "schema" : {
              "$ref" : "#/definitions/Response_Custom"
            }
          }
        }
      }
    }
  },
  "securityDefinitions" : {
    "basic" : {
      "type" : "basic"
    }
  },
  "definitions" : {
    "Account" : {
      "type" : "object",
      "properties" : {
        "userName" : {
          "type" : "string",
          "description" : "Specified the username of the account."
        }
      }
    },
    "Response_IdentityInfo" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "ID" : {
          "type" : "string",
          "description" : "ID"
        }
      }
    },
    "Response_ProductDashboard" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "ProductGroupID" : {
          "type" : "string",
          "description" : "Specifies the ID of the product group, such as Personal loans."
        }
      }
    },
    "Funding" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "id"
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the  Journey Manager Tracking ID."
        },
        "FundingApplication_id" : {
          "type" : "string",
          "description" : "Specifies the funding application ID."
        },
        "StartDate" : {
          "type" : "string",
          "description" : "Specifies the date on which the  funding starts."
        },
        "Party_id" : {
          "type" : "string",
          "description" : "Specifies the unique applicant ID that is associated with the Party microservice."
        },
        "CoAppParty_id" : {
          "type" : "string",
          "description" : "Specifies the unique co- applicant ID that is associated with the Party microservice."
        },
        "FundingProduct" : {
          "type" : "string",
          "description" : "Specifies the funding product details. This parameter is mandatory based on group mandatory."
        },
        "FundingType" : {
          "type" : "string",
          "description" : "Specifies the type of funding."
        },
        "FundingStatus" : {
          "type" : "string",
          "description" : "Specifies the status of the funding."
        },
        "DebitAccount" : {
          "type" : "string",
          "description" : "Specifies the debit account number."
        },
        "DebitCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency of the debit account."
        },
        "DebitIBAN" : {
          "type" : "string",
          "description" : "Specifies the international bank debit account number."
        },
        "DebitRoutingNumber" : {
          "type" : "string",
          "description" : "Specifies the routing number for the debit account."
        },
        "DebitAccountType" : {
          "type" : "string",
          "description" : "Specifies the type of the debit account."
        },
        "BankName" : {
          "type" : "string",
          "description" : "Specifies the name of the bank."
        },
        "CIF" : {
          "type" : "string",
          "description" : "Specifies the Customer Information File of the applicant."
        },
        "IsExistentMember" : {
          "type" : "string",
          "description" : "Specifies whether the applicant is an existing member."
        },
        "FundingProducts" : {
          "type" : "string",
          "description" : "Specifies the funding product details. This parameter is mandatory based on group mandatory."
        }
      }
    },
    "ProductSelection" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "id"
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager tracking ID."
        },
        "ProductIDs" : {
          "type" : "string",
          "description" : "Specifies the ID of the products that are must be updated."
        },
        "ProductCurrency" : {
          "type" : "string",
          "description" : "Specifies the currency in which the product is sold."
        },
        "ProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the progress status for the updating process."
        },
        "DateOfBirth" : {
          "type" : "string",
          "description" : "Specifies the date of birth of the applicant."
        },
        "ProductID1" : {
          "type" : "string",
          "description" : "Specifies the product ID."
        },
        "ProductID2" : {
          "type" : "string",
          "description" : "Specifies the product ID."
        },
        "ProductID3" : {
          "type" : "string",
          "description" : "Specifies the product ID."
        },
        "ProductID4" : {
          "type" : "string",
          "description" : "Specifies the product ID."
        },
        "ProductID5" : {
          "type" : "string",
          "description" : "Specifies the product ID."
        },
        "ProductName1" : {
          "type" : "string",
          "description" : "Specifies the name of the product."
        },
        "ProductName2" : {
          "type" : "string",
          "description" : "Specifies the name of the product."
        },
        "ProductName3" : {
          "type" : "string",
          "description" : "Specifies the name of the product."
        },
        "ProductName4" : {
          "type" : "string",
          "description" : "Specifies the name of the product."
        },
        "ProductName5" : {
          "type" : "string",
          "description" : "Specifies the name of the product."
        },
        "ProductCurrency1" : {
          "type" : "string",
          "description" : "Specifies the currency in which the product is sold."
        },
        "ProductCurrency2" : {
          "type" : "string",
          "description" : "Specifies the currency in which the product is sold."
        },
        "ProductCurrency3" : {
          "type" : "string",
          "description" : "Specifies the currency in which the product is sold."
        },
        "ProductCurrency4" : {
          "type" : "string",
          "description" : "Specifies the currency in which the product is sold."
        },
        "ProductCurrency5" : {
          "type" : "string",
          "description" : "Specifies the currency in which the product is sold."
        },
        "Products" : {
          "type" : "string",
          "description" : "Specifies various product details such as ID, currency ID, and so on."
        },
        "NoOfProducts" : {
          "type" : "string",
          "description" : "Specifies the number of products that must be updated. The NoOfProducts parameter can be skipped in the payload."
        },
        "currentSectionProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the status for the update process."
        },
        "Purpose" : {
          "type" : "string",
          "description" : "Specifies the purpose that is fetched from the Spotlight app."
        },
        "currentSection" : {
          "type" : "string",
          "description" : "currentSection"
        }
      }
    },
    "Response_Account" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "userName" : {
          "type" : "string",
          "description" : "Specified the username of the account."
        }
      }
    },
    "ProductDashboard" : {
      "type" : "object",
      "properties" : {
        "ProductGroupID" : {
          "type" : "string",
          "description" : "Specifies the ID of the product group, such as Personal loans."
        },
        "ProductGroupName" : {
          "type" : "string",
          "description" : "Specifies the name of the product group."
        },
        "ProductGroupImg" : {
          "type" : "string",
          "description" : "ProductGroupImg"
        },
        "ProductID" : {
          "type" : "string",
          "description" : "Specifies the product ID."
        },
        "Currency" : {
          "type" : "string",
          "description" : "Specifies the currency."
        },
        "Purpose" : {
          "type" : "string",
          "description" : "Specifies the purpose that is fetched from the Spotlight app."
        },
        "ProductCatalogue" : {
          "type" : "string",
          "description" : "Specifies the product catalog details."
        },
        "ProductGroups" : {
          "type" : "string",
          "description" : "Specifies the various product groups and their details."
        },
        "Products" : {
          "type" : "string",
          "description" : "Specifies various product details such as ID, currency ID, and so on."
        },
        "ProductName" : {
          "type" : "string",
          "description" : "Specifies the name of the product."
        },
        "ProductDescription" : {
          "type" : "string",
          "description" : "Specifies the product description."
        },
        "ImageDetails" : {
          "type" : "string",
          "description" : "Specifies the various details of the images in the product group, such as image type, height, and extension data."
        },
        "ProductDetailedDescription" : {
          "type" : "string",
          "description" : "Specifies a detailed description about the product."
        },
        "ProductNotes" : {
          "type" : "string",
          "description" : "Specifies certain notes about the product."
        },
        "ProductTermsAndConditions" : {
          "type" : "string",
          "description" : "Specifies the various terms and conditions about the product."
        },
        "ProductDisclosure" : {
          "type" : "string",
          "description" : "Specifies the disclosure details about the product."
        }
      }
    },
    "Response_Get_ProductDashboard" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductDashboard"
          }
        }
      }
    },
    "Response_Delete" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "deletedRecords" : {
          "type" : "integer"
        }
      }
    },
    "Response_ProductSelection" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "id" : {
          "type" : "string",
          "description" : "id"
        }
      }
    },
    "Response_Funding" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "id" : {
          "type" : "string",
          "description" : "id"
        }
      }
    },
    "Response_Get_Account" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Account"
          }
        }
      }
    },
    "Response_PersonalInfo" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "id" : {
          "type" : "string",
          "description" : "Specifies the co-applicant ID."
        }
      }
    },
    "IDV" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "id"
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager tracking ID."
        },
        "ApplicantType" : {
          "type" : "string",
          "description" : "Specifies the type of applicant."
        },
        "decision" : {
          "type" : "string",
          "description" : "Specifies the decision of the applicant."
        },
        "vendorId" : {
          "type" : "string",
          "description" : "Specifies the ID of the insurance vendor."
        },
        "field1" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field2" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field3" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field4" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field5" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field6" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field7" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field8" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "field9" : {
          "type" : "string",
          "description" : "Specifies a data field to fill the IDV information."
        },
        "currentSectionProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the status for the update process."
        },
        "currentSection" : {
          "type" : "string",
          "description" : "currentSection"
        }
      }
    },
    "Response_Get_Application" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Application"
          }
        }
      }
    },
    "Response_IDV" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "id" : {
          "type" : "string",
          "description" : "id"
        }
      }
    },
    "Response_Get_IdentityInfo" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IdentityInfo"
          }
        }
      }
    },
    "Response_Get_PersonalInfo" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PersonalInfo"
          }
        }
      }
    },
    "Response_Get_AddressInfo" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AddressInfo"
          }
        }
      }
    },
    "Response_Get_ProductSelection" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProductSelection"
          }
        }
      }
    },
    "Response_Get_IDV" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/IDV"
          }
        }
      }
    },
    "Response_Application" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager tracking ID."
        }
      }
    },
    "AddressInfo" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "string",
          "description" : "Specified the ID of a particular location."
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager tracking ID."
        },
        "ApplicantType" : {
          "type" : "string",
          "description" : "Specifies the type of applicant."
        },
        "AddressLine1" : {
          "type" : "string",
          "description" : "Specifies the first line address of the applicant."
        },
        "AddressLine2" : {
          "type" : "string",
          "description" : "Specifies the second line address of the applicant."
        },
        "City" : {
          "type" : "string",
          "description" : "Specifies the name of the city of the applicant."
        },
        "State" : {
          "type" : "string",
          "description" : "Specifies the name of the state of the applicant."
        },
        "Country" : {
          "type" : "string",
          "description" : "Specifies the name of the country of the applicant."
        },
        "Zipcode" : {
          "type" : "string",
          "description" : "Specifies the zipcode number of the applicant."
        },
        "PersonalInfo_id" : {
          "type" : "string",
          "description" : "PersonalInfo_id"
        },
        "DateOfBirth" : {
          "type" : "string",
          "description" : "Specifies the date of birth of the applicant."
        },
        "currentSectionProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the progress status of the current section."
        },
        "currentSection" : {
          "type" : "string",
          "description" : "Specifies the name of the current section."
        }
      }
    },
    "PersonalInfo" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Specifies the co-applicant ID."
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager tracking ID."
        },
        "ApplicantType" : {
          "type" : "string",
          "description" : "Specifies the type of applicant such as general applicant or co-applicant."
        },
        "FirstName" : {
          "type" : "string",
          "description" : "Specifies the first name of the applicant."
        },
        "LastName" : {
          "type" : "string",
          "description" : "Specifies the last name of the applicant."
        },
        "DateOfBirth" : {
          "type" : "string",
          "description" : "Specifies the date of birth of the applicant."
        },
        "Email" : {
          "type" : "string",
          "description" : "Specifies the  Email address of the applicant."
        },
        "MobileNumber" : {
          "type" : "string",
          "description" : "Specifies the mobile number of the applicant."
        },
        "MobileCountryCode" : {
          "type" : "string",
          "description" : "Specifies the mobile country code."
        },
        "SSN" : {
          "type" : "string",
          "description" : "Specifies the Social Security Number of the user."
        },
        "Party_id" : {
          "type" : "string",
          "description" : "Specifies the unique ID of the Party Micro Service."
        },
        "Age" : {
          "type" : "integer",
          "description" : "Specifies the age of the user."
        },
        "Amount" : {
          "type" : "string",
          "description" : "Amount"
        },
        "IsExistentMember" : {
          "type" : "string",
          "description" : "Specifies whether the applicant is an existing member."
        },
        "CIF" : {
          "type" : "string",
          "description" : "Specifies the Customer Information File of the applicant."
        },
        "Product_id" : {
          "type" : "string",
          "description" : "Specifies the ID of the product."
        },
        "currentSectionProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the progress status of the application."
        },
        "currentSection" : {
          "type" : "string",
          "description" : "currentSection"
        }
      }
    },
    "Response_Get_Funding" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Funding"
          }
        }
      }
    },
    "IdentityInfo" : {
      "type" : "object",
      "properties" : {
        "ID" : {
          "type" : "string",
          "description" : "ID"
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager Tracking ID."
        },
        "ApplicantType" : {
          "type" : "string",
          "description" : "Specifies the type of applicant such as general applicant or co-applicant."
        },
        "TaxIdNum" : {
          "type" : "string",
          "description" : "Specifies the  Tax Identification Number."
        },
        "IDType" : {
          "type" : "string",
          "description" : "Specifies the type of Identification."
        },
        "IssuedCountry" : {
          "type" : "string",
          "description" : "Specifies the country in which the applicant's ID was issued."
        },
        "IdNum" : {
          "type" : "string",
          "description" : "Specifies the Identity Number."
        },
        "IssuedState" : {
          "type" : "string",
          "description" : "Specifies the  State in which the applicant's ID was issued."
        },
        "IssuedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the date on which the applicant's ID was issued."
        },
        "ExpirationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Specifies the expiration date of the applicant's ID."
        },
        "currentSectionProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the status for the update process."
        },
        "currentSection" : {
          "type" : "string",
          "description" : "currentSection"
        }
      }
    },
    "Response_AddressInfo" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "ID" : {
          "type" : "string",
          "description" : "Specified the ID of a particular location."
        }
      }
    },
    "Response_Custom" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        }
      }
    },
    "Application" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Specifies the Journey Manager tracking ID."
        },
        "Party_id" : {
          "type" : "string",
          "description" : "Specifies the unique ID of the Party Micro Service."
        },
        "Status" : {
          "type" : "string",
          "description" : "Specifies the status of the application"
        },
        "ApplicationType" : {
          "type" : "string",
          "description" : "Specifies the type of applicant."
        },
        "EligibilityCriteria" : {
          "type" : "string",
          "description" : "Specifies the eligibility criteria for the applicant."
        },
        "TnCFlag" : {
          "type" : "string",
          "description" : "Specifies the status of the terms and conditions flag."
        },
        "LastSection" : {
          "type" : "string",
          "description" : "Specifies the previous section of the application."
        },
        "CoApplicantCount" : {
          "type" : "string",
          "description" : "Specifies the number of co-applicants."
        },
        "Application_id" : {
          "type" : "string",
          "description" : "Specifies the ID of an application."
        },
        "ApplicantType" : {
          "type" : "string",
          "description" : "Specifies the type of application."
        },
        "DateOfBirth" : {
          "type" : "string",
          "description" : "Specifies the date of birth of the applicant."
        },
        "currentSectionProgressStatus" : {
          "type" : "string",
          "description" : "Specifies the current progress status."
        },
        "LastUpdatedSection" : {
          "type" : "string",
          "description" : "Specifies the section where the update must be made."
        },
        "currentSection" : {
          "type" : "string",
          "description" : "Specifies the name of the current section."
        }
      }
    },
	    "Response_OnboardingC360Services_getCountries" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer",
          "description" : "opstatus"
        },
        "httpStatusCode" : {
          "type" : "string",
          "description" : "httpstatuscode"
        },
        "records" : {
          "type" : "array",
          "description" : "Specifies the record of countries",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Specifies the status of the fetched response"
        }
      }
    },
    "Response_OnboardingC360Services_getUsernameAndPasswordRulesAndPolicies" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        }
      }
    },
    "Response_OnboardingC360Services_getRegions" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer",
          "description" : ""
        },
        "httpStatusCode" : {
          "type" : "string",
          "description" : ""
        },
        "records" : {
          "type" : "array",
          "description" : "Specifies the record of regions in a country",
          "items" : {
            "type" : "object",
            "properties" : { }
          }
        },
        "status" : {
          "type" : "string",
          "description" : "Specifies the status of the operation (Success/Failure)"
        }
      }
    },
    "Request_OnboardingC360Services_getFunctionalFlowConfiguration" : {
      "type" : "object",
      "properties" : {
        "config_key" : {
          "type" : "string",
          "description" : ""
        },
        "bundle_name" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "Request_OnboardingC360Services_Ping" : {
      "type" : "object",
      "properties" : {
        "token" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
    "Response_OnboardingC360Services_Ping" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        }
      }
    },
    "Response_OnboardingC360Services_getFunctionalFlowConfiguration" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "errcode" : {
          "type" : "string",
          "description" : ""
        },
        "BundleConfigurations" : {
          "type" : "object",
          "properties" : {
            "isPreLoginConfiguration" : {
              "type" : "string",
              "description" : ""
            },
            "bundle_id" : {
              "type" : "string",
              "description" : ""
            },
            "bundle_name" : {
              "type" : "string",
              "description" : ""
            },
            "type" : {
              "type" : "string",
              "description" : ""
            },
            "value" : {
              "type" : "string",
              "description" : ""
            },
            "configuration_id" : {
              "type" : "string",
              "description" : ""
            },
            "app_id" : {
              "type" : "string",
              "description" : ""
            },
            "key" : {
              "type" : "string",
              "description" : ""
            },
            "target" : {
              "type" : "string",
              "description" : ""
            }
          }
        },
        "errmsg" : {
          "type" : "string",
          "description" : ""
        }
      }
    },
	    "Request_IDVOrchestration_ExecuteIDV" : {
      "type" : "object",
      "properties" : {
        "DateOfBirth" : {
          "type" : "string",
          "description" : ""
        },
        "Application_id" : {
          "type" : "string",
          "description" : ""
        },
        "ApplicantType" : {
          "type" : "string",
          "description" : ""
        },
        "Party_id" : {
          "type" : "string",
          "description" : ""
        },
        "SSN" : {
          "type" : "string",
          "description" : "",
          "default" : "123453333"
        }
      }
    },
    "Response_IDVOrchestration_ExecuteIDV" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        }
      }
    },
	
	    "Response_Get_SelfieVerify" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SelfieVerify"
          }
        }
      }
    },
    "Documents" : {
      "type" : "object",
      "properties" : {
        "accountCode" : {
          "type" : "string",
          "description" : "Specifies the account code of the applicant."
        },
        "backImage64" : {
          "type" : "string",
          "description" : "Specifies the back image of the document. The image must be recorded in Base 64 format."
        },
        "documentType" : {
          "type" : "string",
          "description" : "Specifies the type of document such as Passport and License."
        },
        "frontImage64" : {
          "type" : "string",
          "description" : "Specifies the front image of the document. The image must be recorded in Base 64 format."
        },
        "verifyStatus" : {
          "type" : "string",
          "description" : "verifyStatus"
        },
        "prefillData" : {
          "type" : "string",
          "description" : "prefillData"
        },
        "executionStatus" : {
          "type" : "string"
        },
        "LocationCode" : {
          "type" : "string"
        },
        "transactionId" : {
          "type" : "string"
        },
        "FirstName" : {
          "type" : "string"
        },
        "errorCode" : {
          "type" : "string"
        },
        "errorMessage" : {
          "type" : "string"
        }
      }
    },
    "SelfieVerify" : {
      "type" : "object",
      "properties" : {
        "accountCode" : {
          "type" : "string",
          "description" : "Specifies the code of the account."
        },
        "farSelfieImage64" : {
          "type" : "string",
          "description" : "Specifies the far selfie of the document. The image must be recorded in Base 64 format."
        },
        "nearSelfieImage64" : {
          "type" : "string",
          "description" : "Specifies the near selfie of the document. The image must be recorded in Base 64 format."
        },
        "transactionId" : {
          "type" : "string",
          "description" : "Specifies the ID of a transaction."
        }
      }
    },
    "Response_Documents" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "accountCode" : {
          "type" : "string",
          "description" : "Specifies the account code of the applicant."
        }
      }
    },
    "Response_SelfieVerify" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "accountCode" : {
          "type" : "string",
          "description" : "Specifies the code of the account."
        }
      }
    },

    "Response_Get_Documents" : {
      "type" : "object",
      "properties" : {
        "opstatus" : {
          "type" : "integer"
        },
        "httpStatusCode" : {
          "type" : "integer"
        },
        "records" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Documents"
          }
        }
      }
    }
	
  }

}