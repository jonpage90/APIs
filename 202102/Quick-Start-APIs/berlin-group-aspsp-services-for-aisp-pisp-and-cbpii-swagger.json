{
    "openapi": "3.0.1",
    "info":
    {
        "title": "Berlin Group - ASPSP services for AISP, PISP and CBPII",
        "version": "1.3.2",
        "description": "*(Based on Berlin Group 1.3.2 and Extended Services 2.0)*\n\n# Summary\n Temenos provides a fully integrated front-to-back API-based solution architecture (a complete set of open APIs).\n\n *This includes providing access to basic account information, the available balance on the account and basic transaction summary, validating and accepting payment orders on an account, calculating the cost of executing the payment (charges, exchange rates and payment execution times), providing payment status and accepting cancellation of payment orders.*\n\n All APIs published by Temenos are based on REST architecture that prescribes rules for exchanging data between systems over the internet via HTTP protocol in accordance with prescribed standards. The Temenos REST APIs will provide access to data and represent data as ‘resources’ in selfdescribing links using machine readable JSON format.\n\n All Temenos APIs will be fully supported and protected through system upgrades i.e. new API versions will be released when new system features are enabled so that banks have the option to select the new features as and when they require. \n\n## Some General Remarks related to this version:\n* *This API definition is based on the Implementation Guidelines of the Berlin Group PSD2 API.* \n\n  It is not an replacement in any sense.\n\n  The main specification is (at the moment) always the Implementation Guidelines of the Berlin Group PSD2 API.\n* *This API definition contains the REST-API for requests from the PISP/AISP to the ASPSP.*\n\n* *This API definition contains the messages for all different approaches defined in the Implementation Guidelines.*\n## General Remarks on Data Types\n\nThe Berlin Group definition of UTF-8 strings in context of the PSD2 API have to support at least the following characters\n\na b c d e f g h i j k l m n o p q r s t u v w x y z\n\nA B C D E F G H I J K L M N O P Q R S T U V W X Y Z\n\n0 1 2 3 4 5 6 7 8 9\n\n/ - ? : ( ) . , ' +\n\nSpace\n## Berlin Group Reference Link\n",
        "contact":
        {
            "name": "The Berlin Group - A European Standards Initiative",
            "url": "https://www.berlin-group.org/"
        }
    },
    "externalDocs":
    {
        "description": "Full Documentation of NextGenPSD2 Access to Account Interoperability Framework (General Introduction Paper, Operational Rules, Implementation Guidelines^, Extended Services, ...)\n",
        "url": "https://www.berlin-group.org/nextgenpsd2-downloads"
    },
    "paths":
    {
        "/v1/{payment-service}/{payment-product}":
        {
            "post":
            {
                "summary": "Payment Initiation Request",
                "description": "The ASPSP might make usage of this access method to initiate a payment at the ASPSP.\n\n## Variants of Payment Initiation Requests\n\nThis method is used for a payment initiation at the ASPSP with a JSON body depending on the payment product in the path.\n\nBelow are the **payment products**:\n\n  - Payment products with payment information in *JSON* format:\n    - ***sepa-credit-transfers***\n    - ***instant-sepa-credit-transfers***\n    - ***target-2-payments***\n    - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***: A single payment initiation request.\n  - ***bulk-payments***: A collection of several payment iniatiation requests.\nIn case of a *JSON* there are several JSON payment blocks contained in a joining list.\n  - ***periodic-payments***: \n    Create a standing order initiation resource for recurring i.e. periodic payments addressable under {paymentId} \n     with all data relevant for the corresponding payment product and the execution of the standing order contained in a JSON body.\n*Note - cross-border-credit-transfers and sepa-credit-transfers are the supported payment products for periodic-payments.*\n  \n## SCA Processing\n\nThe ASPSP will have an 'startAuthorisation' hyperlink in the Payment Initiation Response when an explicit start of the authorisation process is needed by the TPP.\n\nThe Payment Initiation Requests are independent from the need of \nSCA processing, i.e. independent from the number of authorisations needed for the execution of payments.\nBut the response messages are specific to explicit SCA processing. \n\nFor payment initiation with explicit SCA processing, it requires an explicit start of the authorisation, \ni.e. links directly associated with SCA processing like 'scaRedirect' cannot be contained in the \nresponse message of a Payment Initation Request for a payment. \nIn these cases, an authorisation sub-resource has to be generated by following the 'startAuthorisation' link.\n",
                "operationId": "initiatePayment",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "requestBody":
                {
                    "$ref": "#/components/requestBodies/paymentInitiation"
                },
                "responses":
                {
                    "201":
                    {
                        "$ref": "#/components/responses/CREATED_201_PaymentInitiation"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/{payment-service}/{payment-product}/{paymentId}":
        {
            "get":
            {
                "summary": "Get Payment Information",
                "description": "The ASPSP can make usage of this access method to get the details of a payment object at the ASPSP.\n\n## Variants of Payment Information Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "getPaymentInformation",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_PaymentInitiationInformation"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            },
            "delete":
            {
                "summary": "Payment Cancellation Request",
                "description": "The ASPSP can make usage of this access method to initiate the cancellation of a payment. \nDepending on the payment-service, the payment-product and the ASPSP's implementation, \nthis TPP call might be sufficient to cancel a payment. \nIf an explicit authorisation of the payment cancellation is mandated by the ASPSP, \na corresponding 'startAuthorisation' hyperlink will be contained in the response message.\n\nCancels the addressed payment with resource identification paymentId if applicable to the payment-service, payment-product and received in product related timelines (e.g. before end of business day for scheduled payments on the last business day before the scheduled execution day). \n\nThe response to this DELETE command will tell the TPP whether the \n  * access method was rejected\n  * access method was successful, or\n  * access method is generally applicable, but further authorisation processes are needed.\n\n## Variants of Payment Cancellation Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "cancelPayment",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "204":
                    {
                        "$ref": "#/components/responses/NO_CONTENT_204_PaymentInitiationCancel"
                    },
                    "202":
                    {
                        "$ref": "#/components/responses/RECEIVED_202_PaymentInitiationCancel"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS_CANC"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/{payment-service}/{payment-product}/{paymentId}/status":
        {
            "get":
            {
                "summary": "Payment Status Request",
                "description": "The ASPSP can make usage of this access method to get the transaction status of a payment object at the ASPSP.\n\n## Variants of Payment Status Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "getPaymentInitiationStatus",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_PaymentInitiationStatus"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations":
        {
            "post":
            {
                "summary": "Authorisation of a Payment Initiation",
                "description": "Create an authorisation sub-resource and start the authorisation process. \n\nThe ASPSP might make usage of this access method in case of only one SCA process needed, that is if the ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceding Payment Initiation Response that an explicit start of the authorisation process is needed by the TPP or else the related authorisation resource might be automatically created by the ASPSP after the submission of the payment data with the first POST payments/{payment-product} call.\n\n## Variants of Payment Authorisation Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "startPaymentAuthorisation",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "201":
                    {
                        "$ref": "#/components/responses/CREATED_201_StartScaProcess"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            },
            "get":
            {
                "summary": "Get Authorisation Sub-Resources",
                "description": "The ASPSP might make usage of this access method to get all the authorisation sub-resource IDs which have been created in the authorisation process.\n\n This method returns an array of sub-resource IDs of all generated authorisation sub-resources.\n\n## Variants of Payment Authorisation Sub-Resources List Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "getPaymentInitiationAuthorisation",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_Authorisations"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/{payment-service}/{payment-product}/{paymentId}/authorisations/{authorisationId}":
        {
            "get":
            {
                "summary": "Get SCA Status of Authorisation Sub-Resource",
                "description": "The ASPSP might make usage of this access method to get the SCA status of a payment initation's authorisation sub-resource IDs which have been created in the authorisation process.\n\n## Variants of Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "getPaymentInitiationScaStatus",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/authorisationId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ScaStatus"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations":
        {
            "post":
            {
                "summary": "Authorisation of a Payment Cancellation",
                "description": "Create an authorisation sub-resource and start the authorisation process. \n\nThe ASPSP might make usage of this access method in case of only one SCA process needed, that is if the ASPSP has indicated with an 'startAuthorisation' hyperlink in the preceding Payment Cancellation Response that an explicit start of the authorisation process is needed by the TPP or else the related cancellation resource might be automatically created by the ASPSP after the submission of the payment data with the first DELETE payments/{payment-product} call.\n\n## Variants of Payment Cancellation Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "startPaymentInitiationCancellationAuthorisation",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "201":
                    {
                        "$ref": "#/components/responses/CREATED_201_StartScaProcessCancel"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            },
            "get":
            {
                "summary": "Get Cancellation Authorisation Sub-Resources",
                "description": "The ASPSP might make usage of this access method to get all the cancellation authorisation sub-resource IDs which have been created in the cancellation authorisation process.\n\n This method returns an array of sub-resource IDs of all generated cancellation authorisation sub-resources.\n\n## Variants of Payment Cancellation Authorisation Sub-Resources List Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "getPaymentInitiationCancellationAuthorisationInformation",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_CancellationList"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/{payment-service}/{payment-product}/{paymentId}/cancellation-authorisations/{cancellationId}":
        {
            "get":
            {
                "summary": "Get SCA Status of Cancellation Authorisation Sub-Resource",
                "description": "The ASPSP might make usage of this access method to get the SCA status of a payment cancellation's authorisation sub-resource IDs which have been created in the cancellation authorisation process.\n\n## Variants of Requests\n\nBelow are the **payment products**:\n  - ***sepa-credit-transfers***\n  - ***instant-sepa-credit-transfers***\n  - ***target-2-payments***\n  - ***cross-border-credit-transfers***\n  \nFurthermore the request body depends on the **payment-service**\n  - ***payments***\n  - ***bulk-payments***\n  - ***periodic-payments***\n",
                "operationId": "getPaymentCancellationScaStatus",
                "tags": [
          "Payment Initiation Service (PIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/paymentService"
                },
                {
                    "$ref": "#/components/parameters/paymentProduct"
                },
                {
                    "$ref": "#/components/parameters/paymentId"
                },
                {
                    "$ref": "#/components/parameters/cancellationId"
                },
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ScaStatus"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_PIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_PIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_PIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_PIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_PIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_PIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_PIS"
                    }
                }
            }
        },
        "/v1/accounts":
        {
            "get":
            {
                "summary": "Read Account List",
                "description": "Read the identifiers of the available payment account together with \nbooking balance information, depending on the consent granted.\n\nIt is assumed that a consent of the PSU to access this is already given and stored on the ASPSP system. \nThe addressed list of accounts depends then on the PSU ID and the stored consent addressed by consentId. \n\nReturns all identifiers of the accounts, to which an account access has been granted to through \nthe /consents endpoint by the PSU. \nIn addition, relevant information about the accounts and hyperlinks to corresponding account \ninformation resources are provided if a related consent has been already granted.\n\nRemark: Note that the /consents endpoint optionally offers to grant an access on all available \npayment accounts of a PSU. \nIn this case, this endpoint will deliver the information about all available payment accounts \nof the PSU at this ASPSP.\n",
                "operationId": "getAccountList",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/withBalanceQuery"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_AccountList"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/accounts/{account-id}":
        {
            "get":
            {
                "summary": "Read Account Details",
                "description": "Reads details of an account, with balances where required. \nIt is assumed that a consent of the PSU to \naccess this is already given and stored on the ASPSP system. \nThe addressed details of this account depends then on the stored consent addressed by consentId.\n\n**Note:** The account-id can represent a multicurrency account. \nIn this case the currency code is set to \"XXX\".\n\nGive detailed information about the addressed account.\n\nGive detailed information about the addressed account together with balance information\n",
                "operationId": "readAccountDetails",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/accountId"
                },
                {
                    "$ref": "#/components/parameters/withBalanceQuery"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_AccountDetails"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/accounts/{account-id}/balances":
        {
            "get":
            {
                "summary": "Read Balance",
                "description": "Reads account data from a given account addressed by \"account-id\". \n\n*Remark:* This account-id can be a tokenised identification due to data protection reason since the path \ninformation might be logged on intermediary servers within the ASPSP sphere. \nThis account-id then can be retrieved by the \"GET Account List\" call.\n\nThe account-id is constant at least throughout the lifecycle of a given consent.\n",
                "operationId": "getBalances",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/accountId"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_Balances"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/accounts/{account-id}/transactions":
        {
            "get":
            {
                "summary": "Read Transaction List",
                "description": "Read transaction reports or transaction lists of a given account addressed by \"account-id\", depending on the steering parameter \n\"bookingStatus\" together with balances.\n\nFor a given account, additional parameters are e.g. the attributes \"dateFrom\" and \"dateTo\". \nThe ASPSP might add balance information, if transaction lists without balances are not supported.\n",
                "operationId": "getTransactionList",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/accountId"
                },
                {
                    "$ref": "#/components/parameters/dateFrom"
                },
                {
                    "$ref": "#/components/parameters/dateTo"
                },
                {
                    "$ref": "#/components/parameters/entryReferenceFrom"
                },
                {
                    "$ref": "#/components/parameters/bookingStatus"
                },
                {
                    "$ref": "#/components/parameters/withBalanceQuery"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_AccountsTransactions"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/accounts/{account-id}/transactions/{resourceId}":
        {
            "get":
            {
                "summary": "Read Transaction Details",
                "description": "Reads transaction details from a given transaction addressed by \"resourceId\" on a given account addressed by \"account-id\". \nThis call is only available on transactions as reported in a JSON format.\n\n**Remark:** Please note that the PATH might be already given in detail by the corresponding entry of the response of the \n\"Read Transaction List\" call within the _links subfield.\n",
                "operationId": "getTransactionDetails",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/accountId"
                },
                {
                    "$ref": "#/components/parameters/resourceId"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_TransactionDetails"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/consents":
        {
            "post":
            {
                "summary": "Create Account Information Service (AIS) Consent",
                "description": "This method create a consent resource, defining access rights to dedicated accounts of \na given PSU-ID. These accounts are addressed explicitly in the method as \nparameters as a core function.\n\n**Side Effects**\nWhen this Consent Request is a request where the \"recurringIndicator\" equals \"true\", \nand if it exists already a former consent for recurring access on account information \nfor the addressed PSU, then the former consent automatically expires as soon as the new \nconsent request is authorised by the PSU.\n\nOptional Extension:\nAs an option, an ASPSP might optionally accept a specific access right on the access on all psd2 related services for all available accounts. \n\nAs another option an ASPSP might optionally also accept a command, where only access rights are inserted without mentioning the addressed account. \nThe relation to accounts is then handled afterwards between PSU and ASPSP. \nAs a last option, an ASPSP might in addition accept a command with access rights\n  * to see the list of available payment accounts or\n  * to see the list of available payment accounts with balances.\n",
                "operationId": "createConsent",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "requestBody":
                {
                    "$ref": "#/components/requestBodies/consents"
                },
                "responses":
                {
                    "201":
                    {
                        "$ref": "#/components/responses/CREATED_201_Consents"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/consents/{consentId}":
        {
            "get":
            {
                "summary": "Get Account Information Service (AIS) Consent Details",
                "description": "This method returns the content of an Account Information Service (AIS) Consent object.\n\nThis is returning the list of accounts supported and respective access rights including the validity status for the TPP especially in cases, \nwhere the consent was directly managed between ASPSP and PSU.\n",
                "operationId": "getConsentInformation",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/consentId_PATH"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ConsentInformation"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            },
            "delete":
            {
                "summary": "Delete Account Information Service (AIS) Consent",
                "description": "The ASPSP might make usage of this access method to Delete an Account Information Service (AIS) Consent object.\n\nThis terminates the addressed consent and access rights, \nwhere the consent was directly managed between ASPSP and PSU.\n",
                "operationId": "deleteConsent",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/consentId_PATH"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "204":
                    {
                        "$ref": "#/components/responses/NO_CONTENT_204_Consents"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/consents/{consentId}/status":
        {
            "get":
            {
                "summary": "Consent Account Information Service (AIS) Consent Status",
                "description": "This method returns the status of the addressed Account Information Service (AIS) Consent object, \nwhere the consent was directly managed between ASPSP and PSU.\n",
                "operationId": "getConsentStatus",
                "tags": [
          "Account Information Service (AIS)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/consentId_PATH"
                },
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ConsentStatus"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v1/funds-confirmations":
        {
            "post":
            {
                "summary": "Funds Confirmation Request",
                "description": "Creates a confirmation of funds request at the ASPSP.\n\nChecks whether a specific amount is available at point of time of the request on an account linked to a given card issuer(TPP)/card number, or addressed by IBAN, TPP and consent respectively",
                "operationId": "checkAvailabilityOfFunds",
                "tags": [
          "Confirmation of Funds Service (CBPII)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "requestBody":
                {
                    "$ref": "#/components/requestBodies/confirmationOfFunds"
                },
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ConfirmationOfFunds"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v2/consents/confirmation-of-funds":
        {
            "post":
            {
                "summary": "Create Confirmation of Funds Consent",
                "description": "This method creates a confirmation of funds consent resource at the ASPSP regarding confirmation of funds access \nto an account specified in this request.\n\n**Side Effects**\nIn difference to the established Account Information Consent as defined, there is no side effect by the \nConfirmation of Funds Consent Request\n",
                "operationId": "createConsentConfirmationOfFunds",
                "tags": [
          "Confirmation of Funds Service (CBPII)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/Authorization_mandatory"
                }
        ],
                "requestBody":
                {
                    "$ref": "#/components/requestBodies/consentsConfirmationOfFunds"
                },
                "responses":
                {
                    "201":
                    {
                        "$ref": "#/components/responses/CREATED_201_Consents"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v2/consents/confirmation-of-funds/{consentId}/status":
        {
            "get":
            {
                "summary": "Get Confirmation of Funds Consent Status",
                "description": "This method returns the status of the addressed Confirmation of Funds object, \nwhere the consent was directly managed between ASPSP and PSU.\n",
                "operationId": "getConsentConfirmationOfFundsStatus",
                "tags": [
          "Confirmation of Funds Service (CBPII)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                },
                {
                    "$ref": "#/components/parameters/consentId_PATH"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ConsentConfirmationOfFundsStatus"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        },
        "/v2/consents/confirmation-of-funds/{consentId}":
        {
            "get":
            {
                "summary": "Get Confirmation of Funds Consent Details",
                "description": "This method returns the content of a Confirmation of Funds Consent object.\n\nThis is returning the list of accounts supported and respective access rights including the validity status for the TPP especially in cases, \nwhere the consent was directly managed between ASPSP and PSU.\n",
                "operationId": "getConsentConfirmationOfFunds",
                "tags": [
          "Confirmation of Funds Service (CBPII)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                },
                {
                    "$ref": "#/components/parameters/consentId_PATH"
                }
        ],
                "responses":
                {
                    "200":
                    {
                        "$ref": "#/components/responses/OK_200_ConsentConfirmationOfFundsContent"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            },
            "delete":
            {
                "summary": "Delete Confirmation of Funds Consent",
                "description": "The ASPSP might make usage of this access method to Delete a Confirmation of Funds Consent object.\n\nThis terminates the addressed consent and access rights, \nwhere the consent was directly managed between ASPSP and PSU.\n",
                "operationId": "deleteConsentConfirmationOfFunds",
                "tags": [
          "Confirmation of Funds Service (CBPII)"
        ],
                "parameters": [
                {
                    "$ref": "#/components/parameters/AuthorizationWC_mandatory"
                },
                {
                    "$ref": "#/components/parameters/consentId_PATH"
                }
        ],
                "responses":
                {
                    "204":
                    {
                        "$ref": "#/components/responses/OK_204_ConsentConfirmationOfFundsDelete"
                    },
                    "400":
                    {
                        "$ref": "#/components/responses/BAD_REQUEST_400_AIS"
                    },
                    "401":
                    {
                        "$ref": "#/components/responses/UNAUTHORIZED_401_AIS"
                    },
                    "403":
                    {
                        "$ref": "#/components/responses/FORBIDDEN_403_AIS"
                    },
                    "404":
                    {
                        "$ref": "#/components/responses/NOT_FOUND_404_AIS"
                    },
                    "405":
                    {
                        "$ref": "#/components/responses/METHOD_NOT_ALLOWED_405_AIS"
                    },
                    "408":
                    {
                        "$ref": "#/components/responses/REQUEST_TIMEOUT_408_AIS"
                    },
                    "429":
                    {
                        "$ref": "#/components/responses/TOO_MANY_REQUESTS_429_AIS"
                    }
                }
            }
        }
    },
    "components":
    {
        "schemas":
        {
            "AuthorizationWithConsent":
            {
                "description": "JWT Token\n",
                "type": "string",
                "example": "Encoded Token - eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzYWx0ZWRnZSIsInN1YiI6InNhbHRlZGdlIiwiZXhwIjoyMTYyMjQzMjAzLCJpYXQiOjE1NjIyNDMyMDMsImNvbnNlbnQiOiJBQUFDVDIwMTA4TVRHQlg1REwiLCJjbGllbnRfaWQiOiJUUFAyMDA3MzAwMDAxIn0.zIlY5vVTyi8G__7b0rQ86RCl-HWvBkKfP52DczD2WgheZie0nXhKMAUmZQ2b_Ovrk7QCeCDdERGdLFI_2n1aC0xnXrfNgo6ufOZFNBcBHn1jW3eSmSaeuJwLSKN6L2AnbtHTYh2beUQmHlN43_ScHkzjPGbw9HfjBpxqQluJqFiCFmkkFdELWq6sq-UAyIr0-3lSwmsi25jvp_4TqWA_9Qcq79dkhSBOKx1AhD1BG-A7yFZexipEcAorSrwPU84lu1_Ni0xDvdyUcQlG2Fxc7QvcnWyn6E9y7jrBRazQkDx-agvZUfYVbhj299JSaOcwlN9hCzbnd0PKsDoHAdb43A"
            },
            "Authorization":
            {
                "description": "JWT Token\n",
                "type": "string",
                "example": "eyJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzYWx0ZWRnZSIsInN1YiI6InNhbHRlZGdlIiwiZXhwIjoyMTYyMjQzMjAzLCJpYXQiOjE1NjIyNDMyMDMsImNsaWVudF9pZCI6IlRQUDIwMDczMDAwMDEifQ.T5Z1_feccym_ZOl9Rzsn-yi0JFnJXLaPiv_-bplRNtFNEoyQHTwbwPq9rhZb25R4cq3ZZa-FOY1uP2Xu20NhNoYLgrcRK5S8aaPYMVzhxbgFLFgnvKdSsvODHmT9SYqAfrb1NC224lSQnrupOyJm_76pPKDm9At-2YN2mpkJhMVGDS8YMA6aDLHNcUeEXYf_FjK-ppsGCp2P3sC_5bAR6L76oxZGTiuTvGwUY5fOBfVVk_PqQhhKJ557bzXaKlmEQU55pTIxkl_fsW-hwR9MsU81Ex552rrZhKD9Hmq5jPPETIFodqBFgi7VSx2rsb2ijr7ebrfKmTbXPyVgDkGWAQ"
            },
            "cardExpiryDate":
            {
                "description": "Expiry date of the card issued by the PIISP.\n",
                "type": "string",
                "format": "date",
                "example": "2018-07-01"
            },
            "cardNumber":
            {
                "description": "Card Number of the card issued by the PIISP. Should be delivered if available.",
                "type": "string",
                "maxLength": 35
            },
            "cardInformation":
            {
                "description": "Addtional explanation for the card product.",
                "type": "string",
                "maxLength": 140
            },
            "registrationInformation":
            {
                "description": "Addtional information about the registration process for the PSU, e. g. a reference to the TPP / PSU contract.",
                "type": "string",
                "maxLength": 140
            },
            "ConsentConfirmationOfFundsStatusResponse":
            {
                "description": "Body of the JSON response.",
                "type": "object",
                "required": [
          "consentStatus"
        ],
                "properties":
                {
                    "consentStatus":
                    {
                        "$ref": "#/components/schemas/consentStatus"
                    }
                }
            },
            "ConsentConfirmationOfFundsContentResponse":
            {
                "description": "Body of the JSON response for a confirmation of funds content request.",
                "type": "object",
                "required": [
          "account", "consentStatus"
        ],
                "properties":
                {
                    "account":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "cardNumber":
                    {
                        "$ref": "#/components/schemas/cardNumber"
                    },
                    "cardExpiryDate":
                    {
                        "$ref": "#/components/schemas/cardExpiryDate"
                    },
                    "cardInformation":
                    {
                        "$ref": "#/components/schemas/cardInformation"
                    },
                    "registrationInformation":
                    {
                        "$ref": "#/components/schemas/registrationInformation"
                    },
                    "consentStatus":
                    {
                        "$ref": "#/components/schemas/consentStatus"
                    }
                }
            },
            "consentsConfirmationOfFunds":
            {
                "description": "Content of the body of a consent confirmation of funds request.\n",
                "type": "object",
                "required": [
          "account"
        ],
                "properties":
                {
                    "account":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "cardNumber":
                    {
                        "$ref": "#/components/schemas/cardNumber"
                    },
                    "cardExpiryDate":
                    {
                        "$ref": "#/components/schemas/cardExpiryDate"
                    },
                    "cardInformation":
                    {
                        "$ref": "#/components/schemas/cardInformation"
                    },
                    "registrationInformation":
                    {
                        "$ref": "#/components/schemas/registrationInformation"
                    }
                }
            },
            "ConsentsConfirmationOfFundsResponse":
            {
                "description": "Body of the JSON response for a Start single SCA authorisation request.",
                "type": "object",
                "required": [
          "consentStatus", "consentId", "_links"
        ],
                "properties":
                {
                    "consentStatus":
                    {
                        "$ref": "#/components/schemas/consentStatus"
                    },
                    "consentId":
                    {
                        "$ref": "#/components/schemas/consentId"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksConsents"
                    }
                }
            },
            "cashAccountType":
            {
                "description": "ExternalCashAccountType1Code from ISO 20022.\n",
                "type": "string"
            },
            "scaAuthenticationData":
            {
                "description": "SCA authentication data, depending on the chosen authentication method. \nIf the data is binary, then it is base64 encoded.\n",
                "type": "string"
            },
            "paymentId":
            {
                "description": "Resource identification of the generated payment initiation resource.",
                "type": "string",
                "example": "PI2010806T8DDZ0W"
            },
            "paymentIdList":
            {
                "description": "A list of paymentIds",
                "type": "array",
                "minItems": 1,
                "items":
                {
                    "$ref": "#/components/schemas/paymentId"
                }
            },
            "authorisationId":
            {
                "description": "Resource identification of the related SCA",
                "type": "string",
                "example": "PI201080NQ0MMQFY-AUTH-1"
            },
            "authenticationMethodId":
            {
                "description": "An identification provided by the ASPSP for the later identification of the authentication method selection.\n",
                "type": "string",
                "maxLength": 35,
                "example": "myAuthenticationID"
            },
            "accountId":
            {
                "description": "This identification is denoting the addressed account, where the transaction has been performed.",
                "type": "string",
                "example": "qwer3456tzui7890"
            },
            "consentId":
            {
                "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
                "type": "string"
            },
            "consentIdList":
            {
                "description": "A list of consentIds",
                "type": "array",
                "minItems": 1,
                "items":
                {
                    "$ref": "#/components/schemas/consentId"
                }
            },
            "resourceId":
            {
                "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.\n",
                "type": "string",
                "example": "3dc3d5b3-7023-4848-9853-f5400a64e80f"
            },
            "cancellationId":
            {
                "description": "Identification for cancellation resource",
                "type": "string",
                "example": "PI2010806T8DDZ0W-CANC-1"
            },
            "entryReference":
            {
                "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level.\n",
                "type": "string",
                "maxLength": 35
            },
            "transactionStatus":
            {
                "description": "The transaction status is filled with codes of the ISO 20022 data table:\n- 'ACCP': 'AcceptedCustomerProfile' - \n  Preceding check of technical validation was successful. \n  Customer profile check was also successful.\n- 'ACSC': 'AcceptedSettlementCompleted' - \n  Settlement on the debtor�s account has been completed.\n  \n  **Usage:** this can be used by the first agent to report to the debtor that the transaction has been completed. \n  \n  **Warning:** this status is provided for transaction status reasons, not for financial information. \n  It can only be used after bilateral agreement.\n- 'ACSP': 'AcceptedSettlementInProcess' - \n  All preceding checks such as technical validation and customer profile were successful and therefore the payment initiation has been accepted for execution.\n- 'ACWP': 'AcceptedWithoutPosting' - \n  Payment instruction included in the credit transfer is accepted without being posted to the creditor customer�s account.\n- 'RCVD': 'Received' - \n  Payment initiation has been received by the receiving agent.\n- 'RJCT': 'Rejected' - \n  Payment initiation or individual transaction included in the payment initiation has been rejected.\n- 'CANC': 'Cancelled'\n  Payment initiation has been cancelled before execution\n  Remark: This codeis accepted as new code by ISO20022.\n- 'PATC': 'PartiallyAcceptedTechnical'\n  Correct The payment initiation needs multiple authentications, where some but not yet all have been performed. Syntactical and semantical validations are successful.\n  Remark: This code is accepted as new code by ISO20022.\n  \n",
                "type": "string",
                "enum": [
          "ACCP", "ACSC", "ACSP", "ACWP", "RCVD", "RJCT", "CANC", "PATC"
        ],
                "example": "ACCP"
            },
            "scaStatus":
            {
                "description": "This data element is containing information about the status of the SCA method applied. \n\nThe following codes are defined for this data type.\n\n  * 'received':\n    An authorisation or cancellation-authorisation resource has been created successfully.\n  * 'psuIdentified':\n    The PSU related to the authorisation or cancellation-authorisation resource has been identified.\n  * 'psuAuthenticated':\n    The PSU related to the authorisation or cancellation-authorisation resource has been identified and authenticated e.g. by a password or by an access token.\n  * 'scaMethodSelected':\n    The PSU/TPP has selected the related SCA routine. \n    If the SCA method is chosen implicitly since only one SCA method is available, \n    then this is the first status to be reported instead of 'received'.\n  * 'started':\n    The addressed SCA routine has been started.\n  * 'finalised':\n    The SCA routine has been finalised successfully.\n  * 'failed':\n    The SCA routine failed\n  * 'exempted':\n    SCA was exempted for the related transaction, the related authorisation is successful.\n",
                "type": "string",
                "enum": [
          "received", "psuIdentified", "psuAuthenticated", "scaMethodSelected", "started", "finalised", "failed", "exempted"
        ],
                "example": "finalised"
            },
            "consentStatus":
            {
                "description": "This is the overall lifecycle status of the consent.\n\nValid values are:\n  - 'received': The consent data have been received and are technically correct. \n    The data is not authorised yet.\n  - 'rejected': The consent data have been rejected e.g. since no successful authorisation has taken place.\n  - 'valid': The consent is accepted and valid for GET account data calls and others as specified in the consent object.\n  - 'revokedByPsu': The consent has been revoked by the PSU towards the ASPSP.\n  - 'expired': The consent expired.\n  - 'terminatedByTpp': The corresponding TPP has terminated the consent by applying the DELETE method to the consent resource.\n\nThe ASPSP might add further codes. These codes then shall be contained in the ASPSP's documentation of the XS2A interface \nand has to be added to this API definition as well.\n",
                "type": "string",
                "enum": [
          "received", "rejected", "valid", "revokedByPsu", "expired", "terminatedByTpp"
        ]
            },
            "transactionFeeIndicator":
            {
                "description": "If equals 'true', the transaction will involve specific transaction cost as shown by the ASPSP in\ntheir public price list or as agreed between ASPSP and PSU.\nIf equals 'false', the transaction will not involve additional specific transaction costs to the PSU.\n",
                "type": "boolean"
            },
            "recurringIndicator":
            {
                "description": "\"true\", if the consent is for recurring access to the account data.\n\n\"false\", if the consent is for one access to the account data.\n",
                "type": "boolean",
                "example": false
            },
            "combinedServiceIndicator":
            {
                "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\".\n",
                "type": "boolean",
                "example": false
            },
            "batchBookingPreferred":
            {
                "description": "If this element equals 'true', the PSU prefers only one booking entry. \nIf this element equals 'false', the PSU prefers individual booking of all contained individual transactions. \n\nThe ASPSP will follow this preference according to contracts agreed on with the PSU.\n",
                "type": "boolean",
                "example": false
            },
            "scaMethods":
            {
                "description": "This data element might be contained, if SCA is required and if the PSU has a choice between different\nauthentication methods.\n\nDepending on the risk management of the ASPSP this choice might be offered before or after the PSU\nhas been identified with the first relevant factor, or if an access token is transported.\n\nIf this data element is contained, then there is also an hyperlink of type 'startAuthorisationWithAuthenticationMethodSelection'\ncontained in the response body.\n\nThese methods shall be presented towards the PSU for selection by the TPP.\n",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/authenticationObject"
                }
            },
            "authenticationType":
            {
                "description": "Type of the authentication method.\n\nMore authentication types might be added during implementation projects and documented in the ASPSP documentation.\n\n  - 'SMS_OTP': An SCA method, where an OTP linked to the transaction to be authorised is sent to the PSU through a SMS channel.\n  - 'CHIP_OTP': An SCA method, where an OTP is generated by a chip card, e.g. an TOP derived from an EMV cryptogram. \n    To contact the card, the PSU normally needs a (handheld) device. \n    With this device, the PSU either reads the challenging data through a visual interface like flickering or \n    the PSU types in the challenge through the device key pad. \n    The device then derives an OTP from the challenge data and displays the OTP to the PSU.\n  - 'PHOTO_OTP': An SCA method, where the challenge is a QR code or similar encoded visual data \n    which can be read in by a consumer device or specific mobile app. \n    The device resp. the specific app than derives an OTP from the visual challenge data and displays \n    the OTP to the PSU.\n  - 'PUSH_OTP': An OTP is pushed to a dedicated authentication APP and displayed to the PSU.\n",
                "type": "string",
                "enum": [
          "SMS_OTP", "CHIP_OTP", "PHOTO_OTP", "PUSH_OTP"
        ]
            },
            "authenticationObject":
            {
                "description": "Authentication Object\n",
                "type": "object",
                "required": [
          "authenticationType", "authenticationMethodId"
        ],
                "properties":
                {
                    "authenticationType":
                    {
                        "$ref": "#/components/schemas/authenticationType"
                    },
                    "authenticationVersion":
                    {
                        "description": "Depending on the \"authenticationType\".\nThis version can be used by differentiating authentication tools used within performing OTP generation in the same authentication type.\nThis version can be referred to in the ASPSP?s documentation.\n",
                        "type": "string"
                    },
                    "authenticationMethodId":
                    {
                        "$ref": "#/components/schemas/authenticationMethodId"
                    },
                    "name":
                    {
                        "description": "This is the name of the authentication method defined by the PSU in the Online Banking frontend of the ASPSP.\nAlternatively this could be a description provided by the ASPSP like \"SMS OTP on phone +49160 xxxxx 28\".\nThis name shall be used by the TPP when presenting a list of authentication methods to the PSU, if available.\n",
                        "type": "string",
                        "example": "SMS OTP on phone +49160 xxxxx 28"
                    },
                    "explanation":
                    {
                        "description": "Detailed information about the SCA method for the PSU.\n",
                        "type": "string",
                        "example": "Detailed information about the SCA method for the PSU."
                    }
                }
            },
            "hrefType":
            {
                "description": "Link to a resource",
                "type": "object",
                "properties":
                {
                    "href":
                    {
                        "$ref": "#/components/schemas/hrefEntry"
                    }
                }
            },
            "hrefEntry":
            {
                "description": "Link to a resource",
                "type": "string",
                "example": "/v1/payments/sepa-credit-transfers/1234-wertiq-983"
            },
            "authorisationsList":
            {
                "description": "An array of all authorisationIds",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/authorisationId"
                }
            },
            "authorisations":
            {
                "description": "An array of all authorisationIds",
                "type": "object",
                "required": [
          "authorisationIds"
        ],
                "properties":
                {
                    "authorisationIds":
                    {
                        "$ref": "#/components/schemas/authorisationsList"
                    }
                }
            },
            "accountReference":
            {
                "description": "Reference to an account by either\n  * IBAN, of a payment accounts, or\n  * BBAN, for payment accounts if there is no IBAN\n",
                "type": "object",
                "properties":
                {
                    "iban":
                    {
                        "$ref": "#/components/schemas/iban"
                    },
                    "bban":
                    {
                        "$ref": "#/components/schemas/bban"
                    },
                    "currency":
                    {
                        "$ref": "#/components/schemas/currencyCode"
                    }
                }
            },
            "balanceType":
            {
                "description": "The following balance types are defined:\n  - \"closingBooked\": \n    Balance of the account at the end of the pre-agreed account reporting period. \n    It is the sum of the opening booked balance at the beginning of the period and all entries booked \n    to the account during the pre-agreed account reporting period.\n    \n    For card-accounts, this is composed of\n    \n      - invoiced, but not yet paid entries\n    \n  - \"expected\":\n    Balance composed of booked entries and pending items known at the time of calculation, \n    which projects the end of day balance if everything is booked on the account and no other entry is posted.\n    \n    For card accounts, this is composed of \n      - invoiced, but not yet paid entries, \n      - not yet invoiced but already booked entries and\n      - pending items (not yet booked)\n    \n  - \"openingBooked\":\n    Book balance of the account at the beginning of the account reporting period. \n    It always equals the closing book balance from the previous report.\n  - \"interimAvailable\":\n    Available balance calculated in the course of the account ?servicer?s business day, \n    at the time specified, and subject to further changes during the business day. \n    The interim balance is calculated on the basis of booked credit and debit items during the calculation \n    time/period specified.\n    \n    For card-accounts, this is composed of\n      - invoiced, but not yet paid entries, \n      - not yet invoiced but already booked entries\n  - \"forwardAvailable\":\n    Forward available balance of money that is at the disposal of the account owner on the date specified. \n",
                "type": "string",
                "enum": [
          "closingBooked", "expected", "openingBooked", "interimBooked", "interimAvailable", "forwardAvailable"
        ]
            },
            "accountAccess":
            {
                "description": "Requested access services for a consent.\n",
                "type": "object",
                "properties":
                {
                    "accounts":
                    {
                        "description": "Is asking for detailed account information. \n\nIf the array is empty, the TPP is asking for an accessible account list. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for balances or transactions shall be empty, if used.\n",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/accountReference"
                        }
                    },
                    "balances":
                    {
                        "description": "Is asking for balances of the addressed accounts.\n\nIf the array is empty, the TPP is asking for the balances of all accessible account lists. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for accounts or transactions shall be empty, if used.\n",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/accountReference"
                        }
                    },
                    "transactions":
                    {
                        "description": "Is asking for transactions of the addressed accounts. \n\nIf the array is empty, the TPP is asking for the transactions of all accessible account lists. \nThis may be restricted in a PSU/ASPSP authorization dialogue.\nIf the array is empty, also the arrays for accounts or balances shall be empty, if used.\n",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/accountReference"
                        }
                    },
                    "availableAccounts":
                    {
                        "description": "Optional if supported by API provider.\n\nOnly the values \"allAccounts\" or \"allAccountsWithBalances\" is admitted.\n",
                        "type": "string",
                        "enum": [
              "allAccounts", "allAccountsWithBalances"
            ]
                    },
                    "allPsd2":
                    {
                        "description": "Optional if supported by API provider.\n\nOnly the value \"allAccounts\" is admitted.\n",
                        "type": "string",
                        "enum": [
              "allAccounts"
            ]
                    }
                }
            },
            "accountStatus":
            {
                "description": "Account status. The value is one of the following:\n  - \"enabled\": account is available\n  - \"deleted\": account is terminated\n  - \"blocked\": account is blocked e.g. for legal reasons\nIf this field is not used, than the account is available in the sense of this specification.\n",
                "type": "string",
                "enum": [
          "enabled", "deleted", "blocked"
        ]
            },
            "accountDetails":
            {
                "description": "The ASPSP shall give at least one of the account reference identifiers:\n  - iban\n  - bban\n",
                "type": "object",
                "required": [
          "currency"
        ],
                "properties":
                {
                    "iban":
                    {
                        "$ref": "#/components/schemas/iban"
                    },
                    "bban":
                    {
                        "$ref": "#/components/schemas/bban"
                    },
                    "currency":
                    {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "name":
                    {
                        "description": "Name of the account given by the bank or the PSU in online-banking.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "product":
                    {
                        "description": "Product name of the bank for this account, proprietary definition.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "details":
                    {
                        "description": "Specifications that might be provided by the ASPSP\n  - characteristics of the account\n  - characteristics of the relevant card\n",
                        "type": "string",
                        "maxLength": 140
                    },
                    "resourceId":
                    {
                        "description": "This shall be filled, if addressable resource are created by the ASPSP on the /accounts endpoint.",
                        "type": "string"
                    },
                    "status":
                    {
                        "$ref": "#/components/schemas/accountStatus"
                    },
                    "bic":
                    {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "balances":
                    {
                        "$ref": "#/components/schemas/balanceList"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAccountDetails"
                    }
                }
            },
            "accountList":
            {
                "description": "List of accounts with details.\n",
                "type": "object",
                "required": [
          "accounts"
        ],
                "properties":
                {
                    "accounts":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/accountDetails"
                        }
                    }
                }
            },
            "accountReport":
            {
                "description": "JSON based account report.\nThis account report contains transactions resulting from the query parameters.\n\n'booked' shall be contained if bookingStatus parameter is set to \"booked\" or \"both\".\n\n'pending' is not contained if the bookingStatus parameter is set to \"booked\".\n",
                "type": "object",
                "required": [
          "_links"
        ],
                "properties":
                {
                    "booked":
                    {
                        "$ref": "#/components/schemas/transactionList"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAccountReport"
                    }
                }
            },
            "transactionList":
            {
                "description": "Array of transaction details",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/transactionDetails"
                }
            },
            "transactionDetails":
            {
                "description": "Transaction details",
                "type": "object",
                "required": [
          "transactionAmount"
        ],
                "properties":
                {
                    "transactionId":
                    {
                        "description": "the Transaction Id can be used as access-ID in the API, where more details on an transaction is offered. \nIf this data attribute is provided this shows that the AIS can get access on more details about this \ntransaction using the GET Transaction Details Request \n",
                        "type": "string"
                    },
                    "entryReference":
                    {
                        "description": "Is the identification of the transaction as used e.g. for reference for deltafunction on application level. \nThe same identification as for example used within camt.05x messages.\n",
                        "type": "string",
                        "maxLength": 35
                    },
                    "creditorId":
                    {
                        "description": "Identification of Creditors, e.g. a SEPA Creditor ID.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "bookingDate":
                    {
                        "$ref": "#/components/schemas/bookingDate"
                    },
                    "valueDate":
                    {
                        "description": "The Date at which assets become available to the account owner in case of a credit.",
                        "type": "string",
                        "format": "date"
                    },
                    "transactionAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "currencyExchange":
                    {
                        "$ref": "#/components/schemas/reportExchangeRateList"
                    },
                    "creditorName":
                    {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "debtorName":
                    {
                        "$ref": "#/components/schemas/debtorName"
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "remittanceInformationUnstructured":
                    {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "remittanceInformationStructured":
                    {
                        "description": "Reference as contained in the structured remittance reference structure (without the surrounding XML structure).\n\nDifferent from other places the content is containt in plain form not in form of a structered field.\n",
                        "type": "string",
                        "maxLength": 140
                    },
                    "proprietaryBankTransactionCode":
                    {
                        "$ref": "#/components/schemas/proprietaryBankTransactionCode"
                    },
                    "checkId":
                    {
                        "description": "Identification of a Cheque.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "endToEndId":
                    {
                        "description": "Unique end to end identity.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "mandateId":
                    {
                        "description": "Identification of Mandates, e.g. a SEPA Mandate ID.",
                        "type": "string",
                        "maxLength": 35
                    },
                    "purposeCode":
                    {
                        "$ref": "#/components/schemas/purposeCode"
                    },
                    "ultimateCreditor":
                    {
                        "$ref": "#/components/schemas/ultimateCreditor"
                    },
                    "ultimateDebtor":
                    {
                        "$ref": "#/components/schemas/ultimateDebtor"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksTransactionDetails"
                    }
                }
            },
            "reportExchangeRateList":
            {
                "description": "Array of exchange rates",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/reportExchangeRate"
                }
            },
            "reportExchangeRate":
            {
                "description": "Exchange Rate",
                "type": "object",
                "required": [
          "sourceCurrency", "exchangeRate", "unitCurrency", "targetCurrency", "quotationDate"
        ],
                "properties":
                {
                    "sourceCurrency":
                    {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "exchangeRate":
                    {
                        "type": "string"
                    },
                    "unitCurrency":
                    {
                        "type": "string"
                    },
                    "targetCurrency":
                    {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "quotationDate":
                    {
                        "type": "string",
                        "format": "date"
                    },
                    "contractIdentification":
                    {
                        "type": "string"
                    }
                }
            },
            "paymentExchangeRate":
            {
                "description": "Exchange Rate",
                "type": "object",
                "properties":
                {
                    "unitCurrency":
                    {
                        "type": "string"
                    },
                    "exchangeRate":
                    {
                        "type": "string"
                    },
                    "contractIdentification":
                    {
                        "type": "string"
                    },
                    "rateType":
                    {
                        "type": "string",
                        "enum": [
              "SPOT", "SALE", "AGRD"
            ]
                    }
                }
            },
            "balance":
            {
                "description": "A single balance element\n",
                "type": "object",
                "required": [
          "balanceAmount", "balanceType"
        ],
                "properties":
                {
                    "balanceAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "balanceType":
                    {
                        "$ref": "#/components/schemas/balanceType"
                    },
                    "lastChangeDateTime":
                    {
                        "description": "This data element might be used to indicate e.g. with the expected or booked balance that no action is known \non the account, which is not yet booked.\n",
                        "type": "string",
                        "format": "date-time"
                    },
                    "referenceDate":
                    {
                        "description": "Reference date of the balance",
                        "type": "string",
                        "format": "date"
                    },
                    "lastCommittedTransaction":
                    {
                        "description": "\"entryReference\" of the last commited transaction to support the TPP in identifying whether all \nPSU transactions are already known.\n",
                        "type": "string",
                        "maxLength": 35
                    },
                    "creditLimitIncluded":
                    {
                        "description": "A flag indicating if the credit limit of the corresponding account \nis included in the calculation of the balance, where applicable.\n",
                        "example": false,
                        "type": "boolean"
                    }
                }
            },
            "balanceList":
            {
                "description": "A list of balances regarding this account, e.g. the current balance, the last booked balance.\nThe list migght be restricted to the current ballance.\n",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/balance"
                }
            },
            "cancellationList":
            {
                "description": "An array of all cancellationIds connected to this resource.",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/cancellationId"
                }
            },
            "bicfi":
            {
                "description": "Bic Reference\n",
                "type": "string",
                "pattern": "[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}",
                "example": "AAAADEBBXXX"
            },
            "bban":
            {
                "description": "Basic Bank Account Number (BBAN) Identifier\n\nThis data element can be used in the body of the Consent Request\n  Message for retrieving Account access Consent from this Account. This\n  data elements is used for payment Accounts which have no IBAN.\n  ISO20022: Basic Bank Account Number (BBAN). \n  \n  Identifier used nationally by financial institutions, i.e., in individual countries, \n  generally as part of a National Account Numbering Scheme(s), \n  which uniquely identifies the account of a customer.\n",
                "type": "string",
                "pattern": "[a-zA-Z0-9]{1,30}",
                "example": "BARC12345612345678"
            },
            "iban":
            {
                "type": "string",
                "description": "IBAN of an account",
                "pattern": "[A-Z]{2,2}[0-9]{2,2}[a-zA-Z0-9]{1,30}",
                "example": "FR7612345987650123456789014"
            },
            "address":
            {
                "type": "object",
                "required": [
          "country"
        ],
                "properties":
                {
                    "street":
                    {
                        "type": "string",
                        "maxLength": 70
                    },
                    "buildingNumber":
                    {
                        "type": "string"
                    },
                    "city":
                    {
                        "type": "string"
                    },
                    "postalCode":
                    {
                        "type": "string"
                    },
                    "country":
                    {
                        "$ref": "#/components/schemas/countryCode"
                    }
                },
                "example":
                {
                    "street": "rue blue",
                    "buildingnNumber": "89",
                    "city": "Paris",
                    "postalCode": "75000",
                    "country": "FR"
                }
            },
            "countryCode":
            {
                "description": "ISO 3166 ALPHA2 country code",
                "type": "string",
                "pattern": "[A-Z]{2}",
                "example": "SE"
            },
            "creditorNameAndAddress":
            {
                "description": "Creditor Name and Address in a free text field",
                "type": "string",
                "maxLength": 140,
                "example": "Max Masters, Main Street 1, 12345 City, Example Country"
            },
            "amount":
            {
                "type": "object",
                "required": [
          "currency", "amount"
        ],
                "properties":
                {
                    "currency":
                    {
                        "$ref": "#/components/schemas/currencyCode"
                    },
                    "amount":
                    {
                        "$ref": "#/components/schemas/amountValue"
                    }
                },
                "example":
                {
                    "currency": "EUR",
                    "amount": "123"
                }
            },
            "currencyCode":
            {
                "description": "ISO 4217 Alpha 3 currency code\n",
                "type": "string",
                "pattern": "[A-Z]{3}",
                "example": "EUR"
            },
            "amountValue":
            {
                "description": "The amount given with fractional digits, where fractions must be compliant to the currency definition.\nUp to 14 significant figures. Negative amounts are signed by minus.\nThe decimal separator is a dot.\n\n**Example:**\nValid representations for EUR with up to two decimals are:\n\n  * 1056\n  * 5768.2\n  * -1.50\n  * 5877.78\n",
                "type": "string",
                "pattern": "-?[0-9]{1,14}(\\.[0-9]{1,3})?",
                "example": "5877.78"
            },
            "chargeBearer":
            {
                "description": "Charge Bearer. ChargeBearerType1Code from ISO20022",
                "type": "string",
                "enum": [
          "DEBT", "CRED", "SHAR", "SLEV"
        ]
            },
            "remittanceInformationStructured":
            {
                "description": "Structured remittance information\n",
                "type": "object",
                "required": [
          "reference"
        ],
                "properties":
                {
                    "reference":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "referenceType":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "referenceIssuer":
                    {
                        "type": "string",
                        "maxLength": 35
                    }
                }
            },
            "remittanceInformationUnstructured":
            {
                "description": "Unstructured remittance information\n",
                "type": "string",
                "maxLength": 140,
                "example": "Ref Number Merchant"
            },
            "remittanceInformationUnstructuredArray":
            {
                "description": "Array of unstructured remittance information\n",
                "type": "array",
                "items":
                {
                    "$ref": "#/components/schemas/remittanceInformationUnstructured"
                },
                "example": [
          "Ref Number Merchant", "Some Other Text"
        ]
            },
            "purposeCode":
            {
                "description": "ExternalPurpose1Code from ISO 20022.\n\nValues from ISO 20022 External Code List ExternalCodeSets_1Q2018 June 2018.\n",
                "type": "string",
                "enum": [
          "BKDF", "BKFE", "BKFM", "BKIP", "BKPP", "CBLK", "CDCB", "CDCD", "CDCS", "CDDP", "CDOC", "CDQC", "ETUP", "FCOL", "MTUP", "ACCT", "CASH", "COLL", "CSDB", "DEPT", "INTC", "LIMA", "NETT", "BFWD", "CCIR", "CCPC", "CCPM", "CCSM", "CRDS", "CRPR", "CRSP", "CRTL", "EQPT", "EQUS", "EXPT", "EXTD", "FIXI", "FWBC", "FWCC", "FWSB", "FWSC", "MARG", "MBSB", "MBSC", "MGCC", "MGSC", "OCCC", "OPBC", "OPCC", "OPSB", "OPSC", "OPTN", "OTCD", "REPO", "RPBC", "RPCC", "RPSB", "RPSC", "RVPO", "SBSC", "SCIE", "SCIR", "SCRP", "SHBC", "SHCC", "SHSL", "SLEB", "SLOA", "SWBC", "SWCC", "SWPT", "SWSB", "SWSC", "TBAS", "TBBC", "TBCC", "TRCP", "AGRT", "AREN", "BEXP", "BOCE", "COMC", "CPYR", "GDDS", "GDSV", "GSCB", "LICF", "MP2B", "POPE", "ROYA", "SCVE", "SERV", "SUBS", "SUPP", "TRAD", "CHAR", "COMT", "MP2P", "ECPG", "ECPR", "ECPU", "EPAY", "CLPR", "COMP", "DBTC", "GOVI", "HLRP", "HLST", "INPC", "INPR", "INSC", "INSU", "INTE", "LBRI", "LIFI", "LOAN", "LOAR", "PENO", "PPTI", "RELG", "RINP", "TRFD", "FORW", "FXNT", "ADMG", "ADVA", "BCDM", "BCFG", "BLDM", "BNET", "CBFF", "CBFR", "CCRD", "CDBL", "CFEE", "CGDD", "CORT", "COST", "CPKC", "DCRD", "DSMT", "DVPM", "EDUC", "FACT", "FAND", "FCPM", "FEES", "GOVT", "ICCP", "IDCP", "IHRP", "INSM", "IVPT", "MCDM", "MCFG", "MSVC", "NOWS", "OCDM", "OCFG", "OFEE", "OTHR", "PADD", "PTSP", "RCKE", "RCPT", "REBT", "REFU", "RENT", "REOD", "RIMB", "RPNT", "RRBN", "RVPM", "SLPI", "SPLT", "STDY", "TBAN", "TBIL", "TCSC", "TELI", "TMPG", "TPRI", "TPRP", "TRNC", "TRVC", "WEBI", "ANNI", "CAFI", "CFDI", "CMDT", "DERI", "DIVD", "FREX", "HEDG", "INVS", "PRME", "SAVG", "SECU", "SEPI", "TREA", "UNIT", "FNET", "FUTR", "ANTS", "CVCF", "DMEQ", "DNTS", "HLTC", "HLTI", "HSPC", "ICRF", "LTCF", "MAFC", "MARF", "MDCS", "VIEW", "CDEP", "SWFP", "SWPP", "SWRS", "SWUF", "ADCS", "AEMP", "ALLW", "ALMY", "BBSC", "BECH", "BENE", "BONU", "CCHD", "COMM", "CSLP", "GFRP", "GVEA", "GVEB", "GVEC", "GVED", "GWLT", "HREC", "PAYR", "PEFC", "PENS", "PRCP", "RHBS", "SALA", "SSBE", "LBIN", "LCOL", "LFEE", "LMEQ", "LMFI", "LMRK", "LREB", "LREV", "LSFL", "ESTX", "FWLV", "GSTX", "HSTX", "INTX", "NITX", "PTXP", "RDTX", "TAXS", "VATX", "WHLD", "TAXR", "B112", "BR12", "TLRF", "TLRR", "AIRB", "BUSB", "FERB", "RLWY", "TRPT", "CBTV", "ELEC", "ENRG", "GASB", "NWCH", "NWCM", "OTLC", "PHON", "UBIL", "WTER"
        ]
            },
            "bankTransactionCode":
            {
                "description": "Bank transaction code as used by the ASPSP and using the sub elements of this structured code defined by ISO 20022. \n\nThis code type is concatenating the three ISO20022 Codes \n  * Domain Code, \n  * Family Code, and \n  * SubFamiliy Code \nby hyphens, resulting in �DomainCode�-�FamilyCode�-�SubFamilyCode�.\n",
                "type": "string",
                "example": "PMNT-RCDT-ESCT"
            },
            "proprietaryBankTransactionCode":
            {
                "description": "Proprietary bank transaction code as used within a community or within an ASPSP e.g. \nfor MT94x based transaction reports.\n",
                "type": "string",
                "maxLength": 35
            },
            "merchantCategoryCode":
            {
                "description": "Merchant category code",
                "type": "string",
                "maxLength": 4,
                "minLength": 4
            },
            "frequencyCode":
            {
                "description": "The following codes from the \"EventFrequency7Code\" of ISO 20022 are supported.\n- \"Daily\"\n- \"Weekly\"\n- \"EveryTwoWeeks\"\n- \"Monthly\"\n- \"EveryTwoMonths\"\n- \"Quarterly\"\n- \"SemiAnnual\"\n- \"Annual\"\n",
                "type": "string",
                "enum": [
          "Daily", "Weekly", "EveryTwoWeeks", "Monthly", "EveryTwoMonths", "Quarterly", "SemiAnnual", "Annual"
        ]
            },
            "frequencyPerDay":
            {
                "description": "This field indicates the requested maximum frequency for an access without PSU involvement per day.\nFor a one-off access, this attribute is set to \"1\".\n\nThe frequency needs to be greater equal to one.\n",
                "type": "integer",
                "example": 4,
                "minimum": 1,
                "exclusiveMinimum": false
            },
            "dayOfExecution":
            {
                "description": "Day of execution as string.\n\nThis string consists of up two characters.\nLeading zeroes are not allowed.\n\n31 is ultimo of the month.\n",
                "type": "string",
                "maxLength": 2,
                "enum": [
          "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31"
        ]
            },
            "executionRule":
            {
                "description": "\"following\" or \"preceding\" supported as values. \nThis data attribute defines the behaviour when recurring payment dates falls on a weekend or bank holiday. \nThe payment is then executed either the \"preceding\" or \"following\" working day.\nASPSP might reject the request due to the communicated value, if rules in Online-Banking are not supporting \nthis execution rule.\n",
                "type": "string",
                "enum": [
          "following", "preceding"
        ]
            },
            "creditorName":
            {
                "description": "Creditor Name",
                "type": "string",
                "maxLength": 70,
                "example": "Creditor Name"
            },
            "creditorAgentName":
            {
                "description": "Creditor Agent Name",
                "type": "string",
                "maxLength": 70,
                "example": "Creditor Agent Name"
            },
            "debtorName":
            {
                "description": "Debtor Name",
                "type": "string",
                "maxLength": 70,
                "example": "Debtor Name"
            },
            "ultimateDebtor":
            {
                "description": "Ultimate Debtor",
                "type": "string",
                "maxLength": 70,
                "example": "Ultimate Debtor"
            },
            "debtorId":
            {
                "description": "Debtor Id",
                "type": "string",
                "maxLength": 35,
                "example": "Debtor Id 1234"
            },
            "ultimateCreditor":
            {
                "description": "Ultimate Creditor",
                "type": "string",
                "maxLength": 70,
                "example": "Ultimate Creditor"
            },
            "transactionDate":
            {
                "description": "Date of the actual card transaction",
                "type": "string",
                "format": "date"
            },
            "startDate":
            {
                "description": "The first applicable day of execution starting from this date is the first payment.\n",
                "type": "string",
                "format": "date"
            },
            "endDate":
            {
                "description": "The last applicable day of execution\nIf not given, it is an infinite standing order.\n",
                "type": "string",
                "format": "date"
            },
            "bookingDate":
            {
                "description": "The Date when an entry is posted to an account on the ASPSPs books.\n",
                "type": "string",
                "format": "date"
            },
            "validUntil":
            {
                "description": "This parameter is requesting a valid until date for the requested consent. \nThe content is the local ASPSP date in ISO-Date Format, e.g. 2017-10-30. \n\nFuture dates might get adjusted by ASPSP. \n\nIf a maximal available date is requested, a date in far future is to be used: \"9999-12-31\". \n\nIn both cases the consent object to be retrieved by the GET Consent Request will contain the adjusted date.\n",
                "type": "string",
                "format": "date",
                "example": "2020-12-31"
            },
            "lastActionDate":
            {
                "description": "This date is containing the date of the last action on the consent object either through \nthe XS2A interface or the PSU/ASPSP interface having an impact on the status.\n",
                "type": "string",
                "format": "date",
                "example": "2018-07-01"
            },
            "paymentInitiation_json":
            {
                "description": "Generic Body for a payment initation via JSON.\n\nThis generic JSON body can be used to represent valid payment initiations for the following JSON based payment product, \nwhich where defined in the Implementation Guidelines:\n\n  * sepa-credit-transfers\n  * instant-sepa-credit-transfers\n  * target-2-payments\n  * cross-border-credit-transfers\n\nTake care: Since the format is intended to fit for all payment products \nthere are additional conditions which are NOT covered by this specification.\nPlease check the Implementation Guidelines for detailes.\n\n\nThe following data element are depending on the actual payment product available (in source code):\n          \n <table style=\"width:100%\">\n <tr><th>Data Element</th><th>SCT EU Core</th><th>SCT INST EU Core</th><th>Target2 Paym. Core</th><th>Cross Border CT Core</th></tr>\n <tr><td>endToEndIdentification</td><td> optional</td> <td>optional</td> <td>optional</td> <td>n.a.</td> </tr>\n <tr><td>debtorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>debtorId</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>ultimateDebtor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>instructedAmount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>transactionCurrency</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>exchangeRateInformation</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>creditorAgent</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>creditorAgentName</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorName</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>creditorId</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorAddress</td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>creditorNameAndAddress</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>ultimateCreditor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>purposeCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>chargeBearer</td> <td>n.a.</td> <td>n.a.</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>remittanceInformationUnstructured</td> <td>optional</td> <td>optional</td> <td> optional</td> <td>optional</td> </tr>\n <tr><td>remittanceInformationUnstructuredArray</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>remittanceInformationStructured</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>requestedExecutionDate</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>optional</td> </tr>\n <tr><td>requestedExecutionTime</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n    </td></tr>\n  </table>\n  \nIMPORTANT: In this API definition the following holds:\n  *  All data elements mentioned above are defined, but some of them are commented, \n    i.e. they are only visible in the source code and can be used by uncommenting them.\n  * Data elements which are mandatory in the table above for all payment products \n    are set to be mandatory in this specification.\n  * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.\n  * Data elements which are indicated to be option, conditional or mandatory for at least one payment product \n    in the table above are set to be optional in the specification except the case where all are defined to be mandatory. \n  * Data element which are inticated to be n.a. can be used by the ASPS if needed. \n    In this case uncomment tthe the relatetd lines in the source code.\n  * If one uses this data types for some payment products he has to ensure that the used data type is \n    valid according to the underlying payment product, e.g. by some appropriate validations.\n",
                "type": "object",
                "required": [
          "debtorAccount", "instructedAmount", "creditorAccount", "creditorName"
        ],
                "properties":
                {
                    "endToEndIdentification":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent":
                    {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorAgentName":
                    {
                        "$ref": "#/components/schemas/creditorAgentName"
                    },
                    "creditorName":
                    {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress":
                    {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured":
                    {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    }
                }
            },
            "paymentInitiationBulkElement_json":
            {
                "description": "Generic body for a bulk payment initation entry.\n\nThe bulk entry type is a type which follows the JSON formats for the supported products for single payments\nexcluding the data elements (if supported):\n  * debtorAccount\n  * requestedExecutionDate,\n  * requestedExecutionTime.\nThese data elements may not be contained in any bulk entry.\n\nThis data object can be used to represent valid bulk payment initiations entry for the following JSON based payment product, \nwhich where defined in the Implementation Guidelines:\n\n  * sepa-credit-transfers\n  * instant-sepa-credit-transfers\n  * target-2-payments\n  * cross-border-credit-transfers\n\nTake care: Since the format is intended to fit for all payment products \nthere are additional conditions which are NOT covered by this specification.\nPlease check the Implementation Guidelines for detailes.\n\n\nThe following data element are depending on the actual payment product available (in source code):\n          \n <table style=\"width:100%\">\n <tr><th>Data Element</th><th>SCT EU Core</th><th>SCT INST EU Core</th><th>Target2 Paym. Core</th><th>Cross Border CT Core</th></tr>\n <tr><td>endToEndIdentification</td><td> optional</td> <td>optional</td> <td>optional</td> <td>n.a.</td> </tr>\n <tr><td>debtorId</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>ultimateDebtor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>instructedAmount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>transactionCurrency</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>exchangeRateInformation</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>creditorAgent</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>creditorAgentName</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorName</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>creditorId</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorAddress</td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>creditorNameAndAddress</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>ultimateCreditor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>purposeCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>chargeBearer</td> <td>n.a.</td> <td>n.a.</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>remittanceInformationUnstructured</td> <td>optional</td> <td>optional</td> <td> optional</td> <td>optional</td> </tr>\n <tr><td>remittanceInformationUnstructuredArray</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>remittanceInformationStructured</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n    </td></tr>\n  </table>\n  \nIMPORTANT: In this API definition the following holds:\n  *  All data elements mentioned above are defined, but some of them are commented, \n    i.e. they are only visible in the source code and can be used by uncommenting them.\n  * Data elements which are mandatory in the table above for all payment products \n    are set to be mandatory in this specification.\n  * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.\n  * Data elements which are indicated to be option, conditional or mandatory for at least one payment product \n    in the table above are set to be optional in the specification except the case where all are defined to be mandatory. \n  * Data element which are inticated to be n.a. can be used by the ASPS if needed. \n    In this case uncomment tthe the relatetd lines in the source code.\n  * If one uses this data types for some payment products he has to ensure that the used data type is \n    valid according to the underlying payment product, e.g. by some appropriate validations.\n",
                "type": "object",
                "required": [
          "instructedAmount", "creditorAccount", "creditorName"
        ],
                "properties":
                {
                    "endToEndIdentification":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "instructedAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent":
                    {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorAgentName":
                    {
                        "$ref": "#/components/schemas/creditorAgentName"
                    },
                    "creditorName":
                    {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress":
                    {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured":
                    {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    }
                }
            },
            "periodicPaymentInitiation_json":
            {
                "description": "Generic Body for a periodic payment initation via JSON.\n\nThis generic JSON body can be used to represent valid periodic payment initiations for the following JSON based payment product, \nwhich where defined in the Implementation Guidelines:\n\n  * sepa-credit-transfers\n  * instant-sepa-credit-transfers\n  * target-2-payments\n  * cross-border-credit-transfers\n\nTake care: Since the format is intended to fit for all payment products \nthere are additional conditions which are NOT covered by this specification.\nPlease check the Implementation Guidelines for detailes.\n\n\nThe following data element are depending on the actual payment product available (in source code):\n          \n <table style=\"width:100%\">\n <tr><th>Data Element</th><th>SCT EU Core</th><th>SCT INST EU Core</th><th>Target2 Paym. Core</th><th>Cross Border CT Core</th></tr>\n <tr><td>endToEndIdentification</td><td> optional</td> <td>optional</td> <td>optional</td> <td>n.a.</td> </tr>\n <tr><td>debtorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>debtorId</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>ultimateDebtor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>instructedAmount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>transactionCurrency</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>exchangeRateInformation</td> <td>n.a.</td> <td>n.a.</td><td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorAccount</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>creditorAgent</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>creditorAgentName</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorName</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>creditorId</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>creditorAddress</td>optional</td> <td>optional</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>creditorNameAndAddress</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>ultimateCreditor</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>purposeCode</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>chargeBearer</td> <td>n.a.</td> <td>n.a.</td> <td>optional</td> <td>conditional </td> </tr>\n <tr><td>remittanceInformationUnstructured</td> <td>optional</td> <td>optional</td> <td> optional</td> <td>optional</td> </tr>\n <tr><td>remittanceInformationUnstructuredArray</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>remittanceInformationStructured</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>requestedExecutionDate</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>requestedExecutionTime</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> <td>n.a.</td> </tr>\n <tr><td>startDate</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>executionRule</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>optional</td> </tr>\n <tr><td>endDate</td> <td>optional</td> <td>optional</td> <td>optional</td> <td>optional</td> </tr>\n <tr><td>frequency</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> <td>mandatory</td> </tr>\n <tr><td>dayOfExecution</td> <td>conditional</td> <td>conditional</td> <td>conditional</td> <td>conditional</td> </tr>\n    </td></tr>\n  </table>\n  \nIMPORTANT: In this API definition the following holds:\n  *  All data elements mentioned above are defined, but some of them are commented, \n    i.e. they are only visible in the source code and can be used by uncommenting them.\n  * Data elements which are mandatory in the table above for all payment products \n    are set to be mandatory in this specification.\n  * Data elements which are indicated in the table above as n.a. for all payment products are commented in the source code.\n  * Data elements which are indicated to be option, conditional or mandatory for at least one payment product \n    in the table above are set to be optional in the specification except the case where all are defined to be mandatory. \n  * Data element which are inticated to be n.a. can be used by the ASPS if needed. \n    In this case uncomment tthe the relatetd lines in the source code.\n  * If one uses this data types for some payment products he has to ensure that the used data type is \n    valid according to the underlying payment product, e.g. by some appropriate validations.\n",
                "type": "object",
                "required": [
          "debtorAccount", "instructedAmount", "creditorAccount", "creditorName", "startDate", "frequency"
        ],
                "properties":
                {
                    "endToEndIdentification":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent":
                    {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorName":
                    {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress":
                    {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured":
                    {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "startDate":
                    {
                        "$ref": "#/components/schemas/startDate"
                    },
                    "endDate":
                    {
                        "$ref": "#/components/schemas/endDate"
                    },
                    "executionRule":
                    {
                        "$ref": "#/components/schemas/executionRule"
                    },
                    "frequency":
                    {
                        "$ref": "#/components/schemas/frequencyCode"
                    },
                    "dayOfExecution":
                    {
                        "$ref": "#/components/schemas/dayOfExecution"
                    }
                }
            },
            "bulkPaymentInitiation_json":
            {
                "description": "Generic Body for a bulk payment initation via JSON.\n\npaymentInformationId is contained in code but commented since it is n.a. \nand not all ASPSP are able to support this field now.\nIn a later version the field will be mandatory.\n",
                "type": "object",
                "required": [
          "payments", "debtorAccount"
        ],
                "properties":
                {
                    "batchBookingPreferred":
                    {
                        "$ref": "#/components/schemas/batchBookingPreferred"
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "requestedExecutionDate":
                    {
                        "type": "string",
                        "format": "date"
                    },
                    "requestedExecutionTime":
                    {
                        "type": "string",
                        "format": "date-time"
                    },
                    "payments":
                    {
                        "description": "A list of generic JSON bodies payment initations for bulk payments via JSON.\n\nNote: Some fields from single payments do not occcur in a bulk payment element\n",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/paymentInitiationBulkElement_json"
                        }
                    }
                }
            },
            "confirmationOfFunds":
            {
                "description": "JSON Request body for the \"Confirmation of Funds Service\"\n\n<table> \n<tr> \n  <td>cardNumber</td> \n  <td>String </td>\n  <td>Optional</td>\n  <td>Card Number of the card issued by the PIISP. Should be delivered if available.</td>\n</tr> \n<tr>\n  <td>account</td>\n  <td> Account Reference</td>\n  <td>Mandatory</td>\n  <td>PSU's account number.</td>\n</tr> \n<tr> \n  <td>payee</td>\n  <td>Max70Text</td>\n  <td>Optional</td>\n  <td>The merchant where the card is accepted as an information to the PSU.</td>\n</tr> \n<tr>\n  <td>instructedAmount</td>\n  <td>Amount</td>\n  <td>Mandatory</td>\n  <td>Transaction amount to be checked within the funds check mechanism.</td>\n</tr> \n</table>\n",
                "type": "object",
                "required": [
          "account", "instructedAmount"
        ],
                "properties":
                {
                    "cardNumber":
                    {
                        "description": "Card Number of the card issued by the PIISP. \nShould be delivered if available.\n",
                        "type": "string",
                        "maxLength": 35
                    },
                    "account":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "payee":
                    {
                        "description": "Name payee",
                        "type": "string",
                        "maxLength": 70
                    },
                    "instructedAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    }
                }
            },
            "consents":
            {
                "description": "Content of the body of a consent request.\n",
                "type": "object",
                "required": [
          "access", "recurringIndicator", "validUntil", "frequencyPerDay", "combinedServiceIndicator"
        ],
                "properties":
                {
                    "access":
                    {
                        "$ref": "#/components/schemas/accountAccess"
                    },
                    "recurringIndicator":
                    {
                        "$ref": "#/components/schemas/recurringIndicator"
                    },
                    "validUntil":
                    {
                        "$ref": "#/components/schemas/validUntil"
                    },
                    "frequencyPerDay":
                    {
                        "$ref": "#/components/schemas/frequencyPerDay"
                    },
                    "combinedServiceIndicator":
                    {
                        "description": "If \"true\" indicates that a payment initiation service will be addressed in the same \"session\".\n",
                        "type": "boolean",
                        "example": false
                    }
                }
            },
            "periodicPaymentInitiation_xml-Part2-standingorderType_json":
            {
                "description": "The body part 2 of a periodic payment initation request containes the execution related informations \nof the periodic payment.\n",
                "type": "object",
                "required": [
          "startDate", "frequency"
        ],
                "properties":
                {
                    "startDate":
                    {
                        "$ref": "#/components/schemas/startDate"
                    },
                    "endDate":
                    {
                        "$ref": "#/components/schemas/endDate"
                    },
                    "executionRule":
                    {
                        "$ref": "#/components/schemas/executionRule"
                    },
                    "frequency":
                    {
                        "$ref": "#/components/schemas/frequencyCode"
                    },
                    "dayOfExecution":
                    {
                        "$ref": "#/components/schemas/dayOfExecution"
                    }
                }
            },
            "paymentInitiationStatusResponse-200_json":
            {
                "description": "Body of the response for a successful payment initiation status request in case of an JSON based endpoint.",
                "type": "object",
                "required": [
          "transactionStatus"
        ],
                "properties":
                {
                    "transactionStatus":
                    {
                        "$ref": "#/components/schemas/transactionStatus"
                    }
                }
            },
            "paymentInitationRequestResponse-201":
            {
                "description": "Body of the response for a successful payment initiation request.",
                "type": "object",
                "required": [
          "transactionStatus", "paymentId", "_links"
        ],
                "properties":
                {
                    "transactionStatus":
                    {
                        "$ref": "#/components/schemas/transactionStatus"
                    },
                    "paymentId":
                    {
                        "$ref": "#/components/schemas/paymentId"
                    },
                    "transactionFees":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "transactionFeeIndicator":
                    {
                        "$ref": "#/components/schemas/transactionFeeIndicator"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksPaymentInitiation"
                    },
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage2XX"
                        }
                    }
                }
            },
            "paymentInitiationCancelResponse-202":
            {
                "description": "Body of the response for a successful cancel payment request.",
                "type": "object",
                "required": [
          "transactionStatus"
        ],
                "properties":
                {
                    "transactionStatus":
                    {
                        "$ref": "#/components/schemas/transactionStatus"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksPaymentInitiationCancel"
                    }
                }
            },
            "paymentInitiationWithStatusResponse":
            {
                "description": "Generic JSON response body consistion of the corresponding payment initation JSON body together with an optional transaction status field.\n",
                "type": "object",
                "required": [
          "debtorAccount", "instructedAmount", "creditorAccount", "creditorName"
        ],
                "properties":
                {
                    "endToEndIdentification":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent":
                    {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorName":
                    {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress":
                    {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured":
                    {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "transactionStatus":
                    {
                        "$ref": "#/components/schemas/transactionStatus"
                    }
                }
            },
            "periodicPaymentInitiationWithStatusResponse":
            {
                "description": "Generic JSON response body consistion of the corresponding periodic payment initation JSON body together with an optional transaction status field.\n",
                "type": "object",
                "required": [
          "debtorAccount", "instructedAmount", "creditorAccount", "creditorName", "startDate", "frequency"
        ],
                "properties":
                {
                    "endToEndIdentification":
                    {
                        "type": "string",
                        "maxLength": 35
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "instructedAmount":
                    {
                        "$ref": "#/components/schemas/amount"
                    },
                    "creditorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "creditorAgent":
                    {
                        "$ref": "#/components/schemas/bicfi"
                    },
                    "creditorName":
                    {
                        "$ref": "#/components/schemas/creditorName"
                    },
                    "creditorAddress":
                    {
                        "$ref": "#/components/schemas/address"
                    },
                    "remittanceInformationUnstructured":
                    {
                        "$ref": "#/components/schemas/remittanceInformationUnstructured"
                    },
                    "startDate":
                    {
                        "$ref": "#/components/schemas/startDate"
                    },
                    "endDate":
                    {
                        "$ref": "#/components/schemas/endDate"
                    },
                    "executionRule":
                    {
                        "$ref": "#/components/schemas/executionRule"
                    },
                    "frequency":
                    {
                        "$ref": "#/components/schemas/frequencyCode"
                    },
                    "dayOfExecution":
                    {
                        "$ref": "#/components/schemas/dayOfExecution"
                    },
                    "transactionStatus":
                    {
                        "$ref": "#/components/schemas/transactionStatus"
                    }
                }
            },
            "bulkPaymentInitiationWithStatusResponse":
            {
                "description": "Generic JSON response body consistion of the corresponding bulk payment initation JSON body together with an optional transaction status field.\n",
                "type": "object",
                "required": [
          "payments", "debtorAccount"
        ],
                "properties":
                {
                    "batchBookingPreferred":
                    {
                        "$ref": "#/components/schemas/batchBookingPreferred"
                    },
                    "requestedExecutionDate":
                    {
                        "type": "string",
                        "format": "date"
                    },
                    "debtorAccount":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "payments":
                    {
                        "description": "A list of generic JSON bodies payment initations for bulk payments via JSON.\n\nNote: Some fields from single payments do not occcur in a bulk payment element\n",
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/paymentInitiationBulkElement_json"
                        }
                    },
                    "transactionStatus":
                    {
                        "$ref": "#/components/schemas/transactionStatus"
                    }
                }
            },
            "scaStatusResponse":
            {
                "description": "Body of the JSON response with SCA Status",
                "type": "object",
                "properties":
                {
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/scaStatus"
                    }
                }
            },
            "startScaprocessResponse":
            {
                "description": "Body of the JSON response for a Start SCA authorisation request.",
                "type": "object",
                "required": [
          "scaStatus", "_links"
        ],
                "properties":
                {
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/scaStatus"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksStartScaProcess"
                    }
                }
            },
            "updatePsuIdenticationResponse":
            {
                "description": "Body of the JSON response for a successful update PSU Identification request.",
                "type": "object",
                "required": [
          "_links", "scaStatus"
        ],
                "properties":
                {
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/scaStatus"
                    }
                }
            },
            "updatePsuAuthenticationResponse":
            {
                "description": "Body of the JSON response for a successful update PSU Authentication request.",
                "type": "object",
                "required": [
          "scaStatus"
        ],
                "properties":
                {
                    "scaMethods":
                    {
                        "$ref": "#/components/schemas/scaMethods"
                    },
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/scaStatus"
                    }
                }
            },
            "selectPsuAuthenticationMethodResponse":
            {
                "description": "Body of the JSON response for a successful select PSU Authentication Method request.",
                "type": "object",
                "required": [
          "scaStatus"
        ],
                "properties":
                {
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/scaStatus"
                    }
                }
            },
            "consentsResponse-201":
            {
                "description": "Body of the JSON response for a successful conset request.",
                "type": "object",
                "required": [
          "consentStatus", "consentId", "_links"
        ],
                "properties":
                {
                    "consentStatus":
                    {
                        "$ref": "#/components/schemas/consentStatus"
                    },
                    "consentId":
                    {
                        "$ref": "#/components/schemas/consentId"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksConsents"
                    }
                }
            },
            "consentStatusResponse-200":
            {
                "description": "Body of the JSON response for a successful get status request for a consent.",
                "type": "object",
                "required": [
          "consentStatus"
        ],
                "properties":
                {
                    "consentStatus":
                    {
                        "$ref": "#/components/schemas/consentStatus"
                    }
                }
            },
            "consentInformationResponse-200_json":
            {
                "description": "Body of the JSON response for a successfull get consent request.",
                "type": "object",
                "required": [
          "access", "recurringIndicator", "validUntil", "frequencyPerDay", "lastActionDate", "consentStatus"
        ],
                "properties":
                {
                    "access":
                    {
                        "$ref": "#/components/schemas/accountAccess"
                    },
                    "recurringIndicator":
                    {
                        "$ref": "#/components/schemas/recurringIndicator"
                    },
                    "validUntil":
                    {
                        "$ref": "#/components/schemas/validUntil"
                    },
                    "frequencyPerDay":
                    {
                        "$ref": "#/components/schemas/frequencyPerDay"
                    },
                    "lastActionDate":
                    {
                        "$ref": "#/components/schemas/lastActionDate"
                    },
                    "consentStatus":
                    {
                        "$ref": "#/components/schemas/consentStatus"
                    }
                }
            },
            "readAccountBalanceResponse-200":
            {
                "description": "Body of the response for a successful read balance for an account request.",
                "type": "object",
                "required": [
          "balances"
        ],
                "properties":
                {
                    "account":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "balances":
                    {
                        "$ref": "#/components/schemas/balanceList"
                    }
                }
            },
            "transactionsResponse-200_json":
            {
                "description": "Body of the JSON response for a successful read transaction list request.\nThis account report contains transactions resulting from the query parameters.\n",
                "type": "object",
                "properties":
                {
                    "account":
                    {
                        "$ref": "#/components/schemas/accountReference"
                    },
                    "transactions":
                    {
                        "$ref": "#/components/schemas/accountReport"
                    },
                    "balances":
                    {
                        "$ref": "#/components/schemas/balanceList"
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksDownload"
                    }
                }
            },
            "camt.052":
            {
                "description": "camt.052 XML message\n",
                "type": "string"
            },
            "mt940":
            {
                "description": "Data MT940 format in a text structure. \n",
                "type": "string"
            },
            "mt942":
            {
                "description": "Data MT942 format in a text structure.\n",
                "type": "string"
            },
            "_linksAll":
            {
                "description": "A _link object with all availabel link types\n",
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties":
                {
                    "scaRedirect":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "startAuthorisation":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "account":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "balances":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "transactions":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "transactionDetails":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksPaymentInitiation":
            {
                "description": "A list of hyperlinks to be recognised by the TPP.\nThe actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when\nprocessing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n* 'scaRedirect': \n  In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n* 'startAuthorisation': \n  In case, where an explicit start of the transaction authorisation is needed, but no more data needs to be updated \n  (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded).\n* 'self': \n  The link to the payment initiation resource created by this request.\n  This link can be used to retrieve the resource data.\n* 'status': \n  The link to retrieve the transaction status of the payment initiation.\n* 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n  This link is only contained, if an authorisation sub-resource has been already created.\n",
                "type": "object",
                "properties":
                {
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaRedirect":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "startAuthorisation":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksPaymentInitiationCancel":
            {
                "description": "A list of hyperlinks to be recognised by the TPP. The actual hyperlinks used in the response depend on the \ndynamical decisions of the ASPSP when processing the request.\n\nRemark: All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n  * 'startAuthorisation': \n    In case, where just the authorisation process of the cancellation needs to be started, \n    but no additional data needs to be updated for time being (no authentication method to be selected, \n    no PSU identification nor PSU authentication data to be uploaded).\n  * 'self': \n  The link to the payment cancellation resource created by this request.\n  This link can be used to retrieve the resource data.\n * 'status': \n  The link to retrieve the transaction status of the payment cancellation.\n * 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n",
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties":
                {
                    "self":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "startAuthorisation":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksStartScaProcess":
            {
                "description": "A list of hyperlinks to be recognised by the TPP.\nThe actual hyperlinks used in the response depend on the dynamical decisions of the ASPSP when\nprocessing the request.\n\n**Remark:** All links can be relative or full links, to be decided by the ASPSP.\n\nType of links admitted in this response, (further links might be added for ASPSP defined extensions):\n\n* 'scaRedirect': \n  In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the PSU browser.\n* 'startAuthorisation': \n  In case, where an explicit start of the transaction authorisation is needed, but no more data needs to be updated \n  (no authentication method to be selected, no PSU identification nor PSU authentication data to be uploaded).\n* 'self': \n  The link to the payment initiation resource created by this request.\n  This link can be used to retrieve the resource data.\n* 'status': \n  The link to retrieve the transaction status of the payment initiation.\n* 'scaStatus': \n  The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n  This link is only contained, if an authorisation sub-resource has been already created.\n",
                "type": "object",
                "properties":
                {
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaRedirect":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksDownload":
            {
                "description": "A list of hyperlinks to be recognised by the TPP.\n\nType of links admitted in this response:\n  - \"download\": a link to a resource, where the transaction report might be downloaded from in \n  case where transaction reports have a huge size.\n\nRemark: This feature shall only be used where camt-data is requested which has a huge size.\n",
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "required": [
          "download"
        ],
                "properties":
                {
                    "download":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksConsents":
            {
                "description": "A list of hyperlinks to be recognised by the TPP.\n\nType of links admitted in this response (which might be extended by single ASPSPs as indicated in its XS2A \ndocumentation):\n  - 'scaRedirect': \n    In case of an SCA Redirect Approach, the ASPSP is transmitting the link to which to redirect the \n    PSU browser.\n  - 'startAuthorisation': \n    In case, where an explicit start of the transaction authorisation is needed, \n    but no more data needs to be updated (no authentication method to be selected, \n    no PSU identification nor PSU authentication data to be uploaded).\n  - 'self': \n    The link to the Establish Account Information Consent resource created by this request. \n    This link can be used to retrieve the resource data. \n  - 'status': \n    The link to retrieve the status of the account information consent.\n  - 'scaStatus': The link to retrieve the scaStatus of the corresponding authorisation sub-resource. \n    This link is only contained, if an authorisation sub-resource has been already created.\n",
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties":
                {
                    "scaRedirect":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "startAuthorisation":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "self":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "status":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "scaStatus":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksAccountReport":
            {
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "required": [
          "account"
        ],
                "properties":
                {
                    "account":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksTransactionDetails":
            {
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "required": [
          "transactionDetails"
        ],
                "properties":
                {
                    "transactionDetails":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "_linksAccountDetails":
            {
                "description": "Links to the account, which can be directly used for retrieving account information from this dedicated account.\n\nLinks to \"balances\" and/or \"transactions\"\n\nThese links are only supported, when the corresponding consent has been already granted.\n",
                "type": "object",
                "additionalProperties":
                {
                    "$ref": "#/components/schemas/hrefType"
                },
                "properties":
                {
                    "balances":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    },
                    "transactions":
                    {
                        "$ref": "#/components/schemas/hrefType"
                    }
                }
            },
            "tppMessageCategory":
            {
                "description": "Category of the TPP message category",
                "type": "string",
                "enum": [
          "ERROR", "WARNING"
        ]
            },
            "MessageCode2XX":
            {
                "description": "Message codes for HTTP Error codes 2XX.",
                "type": "string",
                "enum": [
          "WARNING"
        ]
            },
            "MessageCode400_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 400 (BAD_REQUEST).",
                "type": "string",
                "enum": [
          "FORMAT_ERROR", "PARAMETER_NOT_CONSISTENT", "PARAMETER_NOT_SUPPORTED", "SERVICE_INVALID", "RESOURCE_UNKNOWN", "RESOURCE_EXPIRED", "RESOURCE_BLOCKED", "TIMESTAMP_INVALID", "PERIOD_INVALID", "SCA_METHOD_UNKNOWN", "CONSENT_UNKNOWN", "SESSIONS_NOT_SUPPORTED"
        ]
            },
            "MessageCode400_PIS":
            {
                "description": "Message codes defined for PIS for HTTP Error code 400 (BAD_REQUEST).",
                "type": "string",
                "enum": [
          "FORMAT_ERROR", "PARAMETER_NOT_CONSISTENT", "PARAMETER_NOT_SUPPORTED", "SERVICE_INVALID", "RESOURCE_UNKNOWN", "RESOURCE_EXPIRED", "RESOURCE_BLOCKED", "TIMESTAMP_INVALID", "PERIOD_INVALID", "SCA_METHOD_UNKNOWN", "CONSENT_UNKNOWN", "PAYMENT_FAILED", "EXECUTION_DATE_INVALID"
        ]
            },
            "MessageCode401_PIS":
            {
                "description": "Message codes defined for PIS for HTTP Error code 401 (UNAUTHORIZED).",
                "type": "string",
                "enum": [
          "CERTIFICATE_INVALID", "CERTIFICATE_EXPIRED", "CERTIFICATE_BLOCKED", "CERTIFICATE_REVOKE", "CERTIFICATE_MISSING", "SIGNATURE_INVALID", "SIGNATURE_MISSING", "CORPORATE_ID_INVALID", "PSU_CREDENTIALS_INVALID", "CONSENT_INVALID", "CONSENT_EXPIRED", "TOKEN_UNKNOWN", "TOKEN_INVALID", "TOKEN_EXPIRED", "REQUIRED_KID_MISSING"
        ]
            },
            "MessageCode401_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 401 (UNAUTHORIZED).",
                "type": "string",
                "enum": [
          "CERTIFICATE_INVALID", "CERTIFICATE_EXPIRED", "CERTIFICATE_BLOCKED", "CERTIFICATE_REVOKE", "CERTIFICATE_MISSING", "SIGNATURE_INVALID", "SIGNATURE_MISSING", "CORPORATE_ID_INVALID", "PSU_CREDENTIALS_INVALID", "CONSENT_INVALID", "CONSENT_EXPIRED", "TOKEN_UNKNOWN", "TOKEN_INVALID", "TOKEN_EXPIRED"
        ]
            },
            "MessageCode403_PIS":
            {
                "description": "Message codes defined defined for PIS for PIS for HTTP Error code 403 (FORBIDDEN).",
                "type": "string",
                "enum": [
          "CONSENT_UNKNOWN", "SERVICE_BLOCKED", "RESOURCE_UNKNOWN", "RESOURCE_EXPIRED", "PRODUCT_INVALID"
        ]
            },
            "MessageCode403_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 403 (FORBIDDEN).",
                "type": "string",
                "enum": [
          "CONSENT_UNKNOWN", "SERVICE_BLOCKED", "RESOURCE_UNKNOWN", "RESOURCE_EXPIRED"
        ]
            },
            "MessageCode404_PIS":
            {
                "description": "Message codes defined for PIS for HTTP Error code 404 (NOT FOUND).",
                "type": "string",
                "enum": [
          "RESOURCE_UNKNOWN", "PRODUCT_UNKNOWN"
        ]
            },
            "MessageCode404_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 404 (NOT FOUND).",
                "type": "string",
                "enum": [
          "RESOURCE_UNKNOWN"
        ]
            },
            "MessageCode405_PIS":
            {
                "description": "Message codes defined for payment cancelations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
          "SERVICE_INVALID"
        ]
            },
            "MessageCode405_PIS_CANC":
            {
                "description": "Message codes defined for payment cancelations PIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
          "CANCELLATION_INVALID", "SERVICE_INVALID"
        ]
            },
            "MessageCode405_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 405 (METHOD NOT ALLOWED).",
                "type": "string",
                "enum": [
          "SERVICE_INVALID"
        ]
            },
            "MessageCode406_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 406 (NOT ACCEPTABLE).",
                "type": "string",
                "enum": [
          "REQUESTED_FORMATS_INVALID"
        ]
            },
            "MessageCode409_AIS":
            {
                "description": "Message codes defined for AIS for HTTP Error code 409 (CONFLICT).",
                "type": "string",
                "enum": [
          "STATUS_INVALID"
        ]
            },
            "MessageCode409_PIS":
            {
                "description": "Message codes defined for PIS for HTTP Error code 409 (CONFLICT).",
                "type": "string",
                "enum": [
          "STATUS_INVALID"
        ]
            },
            "MessageCode429_AIS":
            {
                "description": "Message codes for HTTP Error code 429 (TOO MANY REQUESTS).",
                "type": "string",
                "enum": [
          "ACCESS_EXCEEDED"
        ]
            },
            "tppMessageText":
            {
                "description": "Additional explaining text to the TPP.",
                "type": "string",
                "maxLength": 512
            },
            "tppMessage2XX":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode2XX"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage400_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode400_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage400_PIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode400_PIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage401_PIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode401_PIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage401_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode401_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage403_PIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode403_PIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage403_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode403_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage404_PIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode404_PIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage404_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode404_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_PIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode405_PIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_PIS_CANC":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode405_PIS_CANC"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage405_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode405_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage409_PIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode409_PIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage406_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode406_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage409_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode409_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppMessage429_AIS":
            {
                "type": "object",
                "required": [
          "category", "code"
        ],
                "properties":
                {
                    "category":
                    {
                        "$ref": "#/components/schemas/tppMessageCategory"
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode429_AIS"
                    },
                    "path":
                    {
                        "type": "string"
                    },
                    "text":
                    {
                        "$ref": "#/components/schemas/tppMessageText"
                    }
                }
            },
            "tppErrorTitle":
            {
                "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                "type": "string",
                "maxLength": 70
            },
            "tppErrorDetail":
            {
                "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                "type": "string",
                "maxLength": 512
            },
            "Error400_PIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 400 for PIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode400_PIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode400_PIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error400_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 400 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode400_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode400_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error401_PIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 401 for PIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode401_PIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode401_PIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error401_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 401 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode401_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode401_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error403_PIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 403 for PIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode403_PIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode403_PIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error403_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 403 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode403_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode403_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error404_PIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 404 for PIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode404_PIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode404_PIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error404_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 404 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode404_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode404_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_PIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for PIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode405_PIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode405_PIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_PIS_CANC":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for a pament cancelation (PIS).\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode405_PIS_CANC"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode405_PIS_CANC"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error405_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 405 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode405_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode405_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error406_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 406 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode406_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode406_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error409_PIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 409 for PIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode409_PIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode409_PIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error409_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 409 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode409_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807].",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode409_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error429_AIS":
            {
                "description": "Standardised definition of reporting error information according to [RFC7807] \nin case of a HTTP error code 429 for AIS.\n",
                "type": "object",
                "required": [
          "type", "code"
        ],
                "properties":
                {
                    "type":
                    {
                        "description": "A URI reference [RFC3986] that identifies the problem type. \nRemark For Future: These URI will be provided by NextGenPSD2 in future.\n",
                        "type": "string",
                        "format": "uri",
                        "maxLength": 70
                    },
                    "title":
                    {
                        "description": "Short human readable description of error type. \nCould be in local language. \nTo be provided by ASPSPs.\n",
                        "type": "string",
                        "maxLength": 70
                    },
                    "detail":
                    {
                        "description": "Detailed human readable text specific to this instance of the error. \nXPath might be used to point to the issue generating the error in addition.\nRemark for Future: In future, a dedicated field might be introduced for the XPath.\n",
                        "type": "string",
                        "maxLength": 512
                    },
                    "code":
                    {
                        "$ref": "#/components/schemas/MessageCode429_AIS"
                    },
                    "additionalErrors":
                    {
                        "description": "Array of Error Information Blocks.\n\nMight be used if more than one error is to be communicated\n",
                        "type": "array",
                        "items":
                        {
                            "description": "This is a data element to support the declaration of additional errors in the context of [RFC7807] \nin case of a HTTP error code 429 for. \n",
                            "type": "object",
                            "required": [
                "code"
              ],
                            "properties":
                            {
                                "title":
                                {
                                    "$ref": "#/components/schemas/tppErrorTitle"
                                },
                                "detail":
                                {
                                    "$ref": "#/components/schemas/tppErrorDetail"
                                },
                                "code":
                                {
                                    "$ref": "#/components/schemas/MessageCode429_AIS"
                                }
                            }
                        }
                    },
                    "_links":
                    {
                        "$ref": "#/components/schemas/_linksAll"
                    }
                }
            },
            "Error400_NG_PIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage400_PIS"
                        }
                    }
                }
            },
            "Error400_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 400.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage400_AIS"
                        }
                    }
                }
            },
            "Error401_NG_PIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage401_PIS"
                        }
                    }
                }
            },
            "Error401_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage401_AIS"
                        }
                    }
                }
            },
            "Error403_NG_PIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage403_PIS"
                        }
                    }
                }
            },
            "Error403_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 403.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage403_AIS"
                        }
                    }
                }
            },
            "Error404_NG_PIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage404_PIS"
                        }
                    }
                }
            },
            "Error404_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 404.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage404_AIS"
                        }
                    }
                }
            },
            "Error405_NG_PIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage405_PIS"
                        }
                    }
                }
            },
            "Error405_NG_PIS_CANC":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage405_PIS_CANC"
                        }
                    }
                }
            },
            "Error405_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 401.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage405_AIS"
                        }
                    }
                }
            },
            "Error406_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 406.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage406_AIS"
                        }
                    }
                }
            },
            "Error409_NG_PIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage409_PIS"
                        }
                    }
                },
                "example": [
                {
                    "category": "ERROR",
                    "code": "STATUS_INVALID",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
        ]
            },
            "Error409_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 409.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage409_AIS"
                        }
                    }
                },
                "example": [
                {
                    "category": "ERROR",
                    "code": "STATUS_INVALID",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
        ]
            },
            "Error429_NG_AIS":
            {
                "description": "NextGenPSD2 specific definition of reporting error information in case of a HTTP error code 429.\n",
                "type": "object",
                "properties":
                {
                    "tppMessages":
                    {
                        "type": "array",
                        "items":
                        {
                            "$ref": "#/components/schemas/tppMessage429_AIS"
                        }
                    }
                },
                "example": [
                {
                    "category": "ERROR",
                    "code": "ACCESS_EXCEEDED",
                    "text": "additional text information of the ASPSP up to 512 characters"
                }
        ]
            }
        },
        "parameters":
        {
            "paymentService":
            {
                "name": "payment-service",
                "in": "path",
                "description": "Payment service:\n\nPossible values are:\n* payments\n* bulk-payments\n* periodic-payments\n",
                "required": true,
                "schema":
                {
                    "type": "string",
                    "enum": [
            "payments", "bulk-payments", "periodic-payments"
          ]
                }
            },
            "paymentProduct":
            {
                "name": "payment-product",
                "in": "path",
                "description": "The addressed payment product endpoint, e.g. for SEPA Credit Transfers (SCT).\nThe ASPSP will publish which of the payment products/endpoints will be supported.\n\nThe following payment products are supported:\n  - sepa-credit-transfers\n  - instant-sepa-credit-transfers\n  - target-2-payments\n  - cross-border-credit-transfers\n \n",
                "required": true,
                "schema":
                {
                    "type": "string",
                    "enum": [
            "sepa-credit-transfers", "instant-sepa-credit-transfers", "target-2-payments", "cross-border-credit-transfers"
          ]
                }
            },
            "paymentId":
            {
                "name": "paymentId",
                "in": "path",
                "description": "Resource identification of the generated payment initiation resource.",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/paymentId"
                }
            },
            "cancellationId":
            {
                "name": "cancellationId",
                "in": "path",
                "description": "Identification for cancellation resource.",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/cancellationId"
                }
            },
            "authorisationId":
            {
                "name": "authorisationId",
                "in": "path",
                "description": "Resource identification of the related SCA.",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/authorisationId"
                }
            },
            "accountId":
            {
                "name": "account-id",
                "in": "path",
                "description": "This identification is denoting the addressed account. \nThe account-id is retrieved by using a \"Read Account List\" call. \nThe account-id is the \"id\" attribute of the account structure. \nIts value is constant at least throughout the lifecycle of a given consent.\n",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/accountId"
                }
            },
            "resourceId":
            {
                "name": "resourceId",
                "in": "path",
                "description": "This identification is given by the attribute resourceId of the corresponding entry of a transaction list.\n",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/resourceId"
                }
            },
            "consentId_PATH":
            {
                "name": "consentId",
                "in": "path",
                "description": "ID of the corresponding consent object as returned by an Account Information Consent Request.\n",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/consentId"
                }
            },
            "AuthorizationWC_mandatory":
            {
                "name": "Authorization",
                "in": "header",
                "description": "TPP can make use of Authorization tokens such as JSON Web Token (JWT) which is an open standard that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. \n\n*Below is a JWT sample with necessary claims to be sent - Following can be extended further or the claim names can be modified based on the requirement*\n  - ***iss*** - Issuer, who issues the token\n  - ***sub*** - principalClaim\n  - ***exp*** - Expiry time\n  - ***iat*** - Issued at or current time stamp\n  - ***client_id*** - TPP reference of an authorised online service provider\n  - ***consent*** - Reference of the consent created prior\n\n\n Decoded Token:\n\n {\n   'iss': 'saltedge',\n  'sub': 'saltedge',\n      'exp': '2162243203',\n      'iat': '1562243203',\n      'consent': 'AAACT20108MTGBX5DL',\n      'client_id': 'TPP2007300001'\n    }  \n ",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/AuthorizationWithConsent"
                }
            },
            "Authorization_mandatory":
            {
                "name": "Authorization",
                "in": "header",
                "description": "TPP can make use of Authorization tokens such as JSON Web Token (JWT) which is an open standard that defines a compact and self-contained way for securely transmitting information between parties as a JSON object. \n\n*Below is a JWT sample with necessary claims to be sent - Following can be extended further or the claim names can be modified based on the requirement*\n  - ***iss*** - Issuer, who issues the token\n  - ***sub*** - principalClaim\n  - ***exp*** - Expiry time\n  - ***iat*** - Issued at or current time stamp\n  - ***client_id*** - TPP reference of an authorised online service provider\n\n\n Decoded Token:\n\n {\n   'iss': 'saltedge',\n  'sub': 'saltedge',\n      'exp': '2162243203',\n      'iat': '1562243203',\n      'client_id': 'TPP2007300001'\n    }  \n ",
                "required": true,
                "schema":
                {
                    "$ref": "#/components/schemas/Authorization"
                }
            },
            "withBalanceQuery":
            {
                "name": "withBalance",
                "in": "query",
                "description": "If contained, this function reads the list of accessible payment accounts including the booking balance, \nif granted by the PSU in the related consent and available by the ASPSP. \nThis parameter might be ignored by the ASPSP. \n",
                "required": false,
                "schema":
                {
                    "type": "boolean"
                }
            },
            "dateFrom":
            {
                "name": "dateFrom",
                "in": "query",
                "description": "Conditional: Starting date (inclusive the date dateFrom) of the transaction list, mandated if no delta access is required.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
                "required": false,
                "schema":
                {
                    "type": "string",
                    "format": "date"
                }
            },
            "dateTo":
            {
                "name": "dateTo",
                "in": "query",
                "description": "End date (inclusive the data dateTo) of the transaction list, default is \"now\" if not given. \n\nMight be ignored if a delta function is used.\n\nFor booked transactions, the relevant date is the booking date. \n\nFor pending transactions, the relevant date is the entry date, which may not be transparent \nneither in this API nor other channels of the ASPSP.\n",
                "required": false,
                "schema":
                {
                    "type": "string",
                    "format": "date"
                }
            },
            "entryReferenceFrom":
            {
                "name": "entryReferenceFrom",
                "in": "query",
                "description": "This data attribute is indicating that the AISP is in favour to get all transactions after \nthe transaction with identification entryReferenceFrom alternatively to the above defined period. \nThis is a implementation of a delta access. \nIf this data element is contained, the entries \"dateFrom\" and \"dateTo\" might be ignored by the ASPSP \nif a delta report is supported.\n\nOptional if supported by API provider.\n",
                "required": false,
                "schema":
                {
                    "type": "string"
                }
            },
            "bookingStatus":
            {
                "name": "bookingStatus",
                "in": "query",
                "description": "Permitted code \n  * \"booked\" \n\n \"booked\" shall be supported by the ASPSP.\n Error code if not supported in the online banking frontend\n",
                "required": true,
                "schema":
                {
                    "type": "string",
                    "enum": [
            "booked"
          ]
                }
            },
            "TPP-Rejection-NoFunds-Preferred":
            {
                "name": "TPP-Rejection-NoFunds-Preferred",
                "in": "header",
                "description": "If it equals \"true\" then the TPP prefers a rejection of the payment initiation in case the ASPSP is \nproviding an integrated confirmation of funds request an the result of this is that not sufficient \nfunds are available.\n\nIf it equals \"false\" then the TPP prefers that the ASPSP is dealing with the payment initiation like \nin the ASPSPs online channel, potentially waiting for a certain time period for funds to arrive to initiate the payment.\n\nThis parameter might be ignored by the ASPSP.\n",
                "schema":
                {
                    "type": "string",
                    "enum": [
            "true", "false"
          ]
                },
                "required": false
            }
        },
        "requestBodies":
        {
            "paymentInitiation":
            {
                "description": "JSON request body for a payment inition request message \n\nBelow are the payment-products supported:\n  * \"sepa-credit-transfers\" with JSON-Body\n  * \"instant-sepa-credit-transfers\" with JSON-Body\n  * \"target-2-payments\" with JSON-Body\n  * \"cross-border-credit-transfers\" with JSON-Body\n\nBelow are the payment-services supported:\n  * \"payments\"\n  * \"periodic-payments\"\n  * \"bulk-paments\"\n\n",
                "required": true,
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "oneOf": [
                            {
                                "$ref": "#/components/schemas/paymentInitiation_json"
                            },
                            {
                                "$ref": "#/components/schemas/periodicPaymentInitiation_json"
                            },
                            {
                                "$ref": "#/components/schemas/bulkPaymentInitiation_json"
                            }
              ]
                        },
                        "examples":
                        {
                            "Example 1: 'payments' - 'sepa-credit-transfers'":
                            {
                                "$ref": "#/components/examples/paymentInitiationSctBody_payments_json"
                            },
                            "Example 2: 'periodic-payments' - 'sepa-credit-transfers'":
                            {
                                "$ref": "#/components/examples/paymentInitiationSctBody_periodic-payments_json"
                            },
                            "Example 3: 'bulk-payments' - 'sepa-credit-transfers'":
                            {
                                "$ref": "#/components/examples/paymentInitiationSctBody_bulk-payments_json"
                            }
                        }
                    }
                }
            },
            "confirmationOfFunds":
            {
                "description": "Request body for a confirmation of funds request.\n",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/confirmationOfFunds"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/confirmationOfFundsExample"
                            }
                        }
                    }
                },
                "required": true
            },
            "consentsConfirmationOfFunds":
            {
                "description": "Requestbody for a consent confirmation of funds request.\n",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/consentsConfirmationOfFunds"
                        },
                        "examples":
                        {
                            "Consent on Confirmation-of-funds":
                            {
                                "$ref": "#/components/examples/consentsCoFExample_Accounts"
                            }
                        }
                    }
                }
            },
            "consents":
            {
                "description": "Requestbody for a consents request\n",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/consents"
                        },
                        "examples":
                        {
                            "Consent on Account List of Available Accounts":
                            {
                                "$ref": "#/components/examples/consentsExample_AccountList"
                            },
                            "Consent Request on Dedicated Accounts":
                            {
                                "$ref": "#/components/examples/consentsExample_DedicatedAccounts"
                            }
                        }
                    }
                }
            }
        },
        "responses":
        {
            "CREATED_201_ConsentsConfirmationOfFunds":
            {
                "description": "Created",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "oneOf": [
                            {
                                "$ref": "#/components/schemas/ConsentsConfirmationOfFundsResponse"
                            }
              ]
                        }
                    }
                }
            },
            "OK_200_ConsentConfirmationOfFundsStatus":
            {
                "description": "Get consent status",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/ConsentConfirmationOfFundsStatusResponse"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/consentStatusResponseExample1"
                            }
                        }
                    }
                }
            },
            "OK_200_ConsentConfirmationOfFundsContent":
            {
                "description": "Get consent status",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/ConsentConfirmationOfFundsContentResponse"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/cofConsentsInformationResponse"
                            }
                        }
                    }
                }
            },
            "OK_204_ConsentConfirmationOfFundsDelete":
            {
                "description": "No Content"
            },
            "OK_200_PaymentInitiationInformation":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "oneOf": [
                            {
                                "$ref": "#/components/schemas/paymentInitiationWithStatusResponse"
                            },
                            {
                                "$ref": "#/components/schemas/periodicPaymentInitiationWithStatusResponse"
                            },
                            {
                                "$ref": "#/components/schemas/bulkPaymentInitiationWithStatusResponse"
                            }
              ]
                        },
                        "examples":
                        {
                            "payments - request":
                            {
                                "$ref": "#/components/examples/paymentsResponse_json"
                            },
                            "periodic-payments - request":
                            {
                                "$ref": "#/components/examples/periodicPaymentsResponse_json"
                            },
                            "bulk-payments - request":
                            {
                                "$ref": "#/components/examples/bulkPaymentsResponse_json"
                            }
                        }
                    }
                }
            },
            "OK_200_PaymentInitiationStatus":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/paymentInitiationStatusResponse-200_json"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/paymentInitiationStatusResponse_json_Simple"
                            }
                        }
                    }
                }
            },
            "OK_200_Authorisations":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/authorisations"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/authorisationListExample"
                            }
                        }
                    }
                }
            },
            "OK_200_ScaStatus":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/scaStatusResponse"
                        }
                    }
                }
            },
            "OK_200_AccountList":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/accountList"
                        },
                        "examples":
                        {
                            "Example 1":
                            {
                                "$ref": "#/components/examples/accountListExample1"
                            },
                            "Example 2":
                            {
                                "$ref": "#/components/examples/accountListExample2"
                            }
                        }
                    }
                }
            },
            "OK_200_CancellationList":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/cancellationList"
                        },
                        "examples":
                        {
                            "Example 1":
                            {
                                "$ref": "#/components/examples/cancellationListExample"
                            }
                        }
                    }
                }
            },
            "OK_200_AccountDetails":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/accountDetails"
                        },
                        "examples":
                        {
                            "Example 1":
                            {
                                "$ref": "#/components/examples/accountDetailsWithoutBalance"
                            },
                            "Example 2":
                            {
                                "$ref": "#/components/examples/accountDetailsWithBalance"
                            }
                        }
                    }
                }
            },
            "OK_200_TransactionDetails":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/transactionDetails"
                        },
                        "examples":
                        {
                            "Example 1":
                            {
                                "$ref": "#/components/examples/transactionDetails"
                            },
                            "Example 2":
                            {
                                "$ref": "#/components/examples/crossCurrencyTransactionDetails"
                            }
                        }
                    }
                }
            },
            "OK_200_Balances":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/readAccountBalanceResponse-200"
                        },
                        "examples":
                        {
                            "Example 1":
                            {
                                "$ref": "#/components/examples/AccountBalanceRequest"
                            }
                        }
                    }
                }
            },
            "OK_200_AccountsTransactions":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/transactionsResponse-200_json"
                        },
                        "examples":
                        {
                            "Example 1":
                            {
                                "$ref": "#/components/examples/transactionListRequest"
                            },
                            "Example 2":
                            {
                                "$ref": "#/components/examples/multiCurrencyTransactionListRequest"
                            }
                        }
                    }
                }
            },
            "OK_200_ConsentInformation":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/consentInformationResponse-200_json"
                        },
                        "examples":
                        {
                            "Global Consent":
                            {
                                "$ref": "#/components/examples/consentsInformationResponseGlobal"
                            },
                            "Detailed Consent":
                            {
                                "$ref": "#/components/examples/consentsInformationResponseExample"
                            }
                        }
                    }
                }
            },
            "OK_200_ConsentStatus":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/consentStatusResponse-200"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/consentStatusResponseExample1"
                            }
                        }
                    }
                }
            },
            "OK_200_ConfirmationOfFunds":
            {
                "description": "OK",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "description": "Equals \"true\" if sufficient funds are available at the time of the request, \n\"false\" otherwise.\n",
                            "type": "object",
                            "required": [
                "fundsAvailable"
              ],
                            "properties":
                            {
                                "fundsAvailable":
                                {
                                    "type": "boolean"
                                }
                            }
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/confirmationOfFundsResponseExample"
                            }
                        }
                    }
                }
            },
            "CREATED_201_PaymentInitiation":
            {
                "description": "CREATED",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "oneOf": [
                            {
                                "$ref": "#/components/schemas/paymentInitationRequestResponse-201"
                            }
              ]
                        },
                        "examples":
                        {
                            "Response in case of a redirect with an implicitly created authorisation sub-resource":
                            {
                                "$ref": "#/components/examples/paymentInitiationExample_json_Redirect"
                            },
                            "Response in case of a redirect where an explicit authorisation start is needed":
                            {
                                "$ref": "#/components/examples/paymentInitiationExample_json__RedirectExplicitAuthorisation"
                            }
                        }
                    }
                }
            },
            "CREATED_201_StartScaProcess":
            {
                "description": "Created",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/startScaprocessResponse"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/startScaProcessResponseExample1"
                            }
                        }
                    }
                }
            },
            "CREATED_201_StartScaProcessCancel":
            {
                "description": "Created",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/startScaprocessResponse"
                        },
                        "examples":
                        {
                            "Example":
                            {
                                "$ref": "#/components/examples/startScaProcessResponseExample2"
                            }
                        }
                    }
                }
            },
            "CREATED_201_Consents":
            {
                "description": "Created",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/consentsResponse-201"
                        },
                        "examples":
                        {
                            "Consent Creation Response":
                            {
                                "$ref": "#/components/examples/consentCreationResponse"
                            }
                        }
                    }
                }
            },
            "RECEIVED_202_PaymentInitiationCancel":
            {
                "description": "Accepted",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/paymentInitiationCancelResponse-202"
                        },
                        "examples":
                        {
                            "Cancellation - Implicit":
                            {
                                "$ref": "#/components/examples/paymentInitiationCancelResponseImplicit"
                            },
                            "Cancellation - Explicit":
                            {
                                "$ref": "#/components/examples/paymentInitiationCancelResponseExplicit"
                            }
                        }
                    }
                }
            },
            "NO_CONTENT_204_PaymentInitiationCancel":
            {
                "description": "No Content"
            },
            "NO_CONTENT_204_Consents":
            {
                "description": "No Content"
            },
            "BAD_REQUEST_400_AIS":
            {
                "description": "Bad Request",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error400_NG_AIS"
                        }
                    }
                }
            },
            "BAD_REQUEST_400_PIS":
            {
                "description": "Bad Request",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error400_NG_PIS"
                        }
                    }
                }
            },
            "UNAUTHORIZED_401_PIS":
            {
                "description": "Unauthorized",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error401_NG_PIS"
                        }
                    }
                }
            },
            "UNAUTHORIZED_401_AIS":
            {
                "description": "Unauthorized",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error401_NG_AIS"
                        }
                    }
                }
            },
            "FORBIDDEN_403_PIS":
            {
                "description": "Forbidden",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error403_NG_PIS"
                        }
                    }
                }
            },
            "FORBIDDEN_403_AIS":
            {
                "description": "Forbidden",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error403_NG_AIS"
                        }
                    }
                }
            },
            "NOT_FOUND_404_PIS":
            {
                "description": "Not found",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error404_NG_PIS"
                        }
                    }
                }
            },
            "NOT_FOUND_404_AIS":
            {
                "description": "Not found",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error404_NG_AIS"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_PIS":
            {
                "description": "Method Not Allowed"
            },
            "METHOD_NOT_ALLOWED_405_PIS_CANC":
            {
                "description": "Method Not Allowed",
                "content":
                {
                    "application/json":
                    {
                        "schema":
                        {
                            "$ref": "#/components/schemas/Error405_NG_PIS_CANC"
                        }
                    }
                }
            },
            "METHOD_NOT_ALLOWED_405_AIS":
            {
                "description": "Method Not Allowed"
            },
            "REQUEST_TIMEOUT_408_PIS":
            {
                "description": "Request Timeout"
            },
            "REQUEST_TIMEOUT_408_AIS":
            {
                "description": "Request Timeout"
            },
            "TOO_MANY_REQUESTS_429_PIS":
            {
                "description": "Too Many Requests"
            },
            "TOO_MANY_REQUESTS_429_AIS":
            {
                "description": "Too Many Requests"
            }
        },
        "examples":
        {
            "ibanExampleDe_01":
            {
                "value": "DE02100100109307118603"
            },
            "ibanExampleDe_02":
            {
                "value": "DE23100120020123456789"
            },
            "ibanExampleDe_03":
            {
                "value": "DE40100100103307118608"
            },
            "ibanExampleDe_04":
            {
                "value": "DE67100100101306118605"
            },
            "ibanExampleDe_05":
            {
                "value": "DE87200500001234567890"
            },
            "ibanExampleFr_01":
            {
                "value": "FR7612345987650123456789014"
            },
            "ibanExampleNl_01":
            {
                "value": "NL76RABO0359400371"
            },
            "ibanExampleSe_01":
            {
                "value": "SE9412309876543211234567"
            },
            "maskedPanExample":
            {
                "value": "123456xxxxxx1234"
            },
            "uuidExample":
            {
                "value": "99391c7e-ad88-49ec-a2ad-99ddcb1f7721"
            },
            "paymentInitiationSctBody_payments_json":
            {
                "value":
                {
                    "creditorAccount":
                    {
                        "iban": "FR7614006000000209615304162"
                    },
                    "creditorAgent": "CITIARBA",
                    "creditorName": "Zeus",
                    "debtorAccount":
                    {
                        "bban": "101036",
                        "currency": "USD"
                    },
                    "endToEndIdentification": "EBACTOUT",
                    "instructedAmount":
                    {
                        "amount": "100",
                        "currency": "USD"
                    },
                    "remittanceInformationUnstructured": "TPS-testing-9"
                }
            },
            "paymentInitiationSctBody_periodic-payments_json":
            {
                "value":
                {
                    "creditorAccount":
                    {
                        "iban": "FR7614006000000209615304162"
                    },
                    "creditorAgent": "AGRIGPGX",
                    "creditorName": "Desmond Miles",
                    "dayOfExecution": "1",
                    "debtorAccount":
                    {
                        "bban": "101036",
                        "currency": "USD",
                        "iban": "GB65DEMO60161300101036"
                    },
                    "endDate": "2020-06-30",
                    "endToEndIdentification": "EBACTOUT",
                    "executionRule": "FOLLOWING",
                    "frequency": "Daily",
                    "instructedAmount":
                    {
                        "amount": "100",
                        "currency": "USD"
                    },
                    "remittanceInformationUnstructured": "Ref Number Merchant",
                    "startDate": "2020-04-18"
                }
            },
            "paymentInitiationSctBody_bulk-payments_json":
            {
                "value":
                {
                    "batchBookingPreferred": false,
                    "debtorAccount":
                    {
                        "bban": "101408",
                        "currency": "EUR"
                    },
                    "payments": [
                    {
                        "creditorAccount":
                        {
                            "bban": "106372",
                            "currency": "GBP"
                        },
                        "creditorAgent": "CITIARBA",
                        "creditorName": "Zeus",
                        "endToEndIdentification": "EBACTOUT01",
                        "instructedAmount":
                        {
                            "amount": "100",
                            "currency": "GBP"
                        },
                        "remittanceInformationUnstructured": "Ref Number Merchant SandBox"
                    },
                    {
                        "creditorAccount":
                        {
                            "bban": "101036",
                            "currency": "USD"
                        },
                        "creditorAgent": "AGRIGPGX",
                        "creditorName": "Desmond Miles",
                        "endToEndIdentification": "EBACTOUT02",
                        "instructedAmount":
                        {
                            "amount": "120",
                            "currency": "USD"
                        },
                        "remittanceInformationUnstructured": "Ref Number Merchant"
                    }
    ],
                    "requestedExecutionDate": "2020-04-17",
                    "requestedExecutionTime": "2020-04-17T18:28:49.493Z"
                }
            },
            "accountDetailsWithoutBalance":
            {
                "summary": "Request Without Balance",
                "description": "Account Details without Balance Details",
                "value":
                {
                    "account":
                    {
                        "product": "Current Account",
                        "bban": "101036",
                        "_links":
                        {
                            "balances":
                            {
                                "href": "/v1/accounts/101036/balances"
                            },
                            "transactions":
                            {
                                "href": "/v1/accounts/101036/transactions"
                            }
                        },
                        "iban": "GB65DEMO60161300101036",
                        "name": "Harry Crisp",
                        "currency": "USD",
                        "details": "Harry Crisp",
                        "bic": "DEMOGBPX",
                        "status": "enabled"
                    }
                }
            },
            "accountDetailsWithBalance":
            {
                "summary": "Request With Balance",
                "description": "Account Details with Balance Details",
                "value":
                {
                    "account":
                    {
                        "product": "Current Account",
                        "balances": [
                        {
                            "balanceType": "closingBooked",
                            "balanceAmount":
                            {
                                "amount": "650578.95",
                                "currency": "USD"
                            }
                        },
                        {
                            "balanceType": "interimAvailable",
                            "balanceAmount":
                            {
                                "amount": "650578.95",
                                "currency": "USD"
                            }
                        }
        ],
                        "bban": "101036",
                        "_links":
                        {
                            "balances":
                            {
                                "href": "/v1/accounts/101036/balances"
                            },
                            "transactions":
                            {
                                "href": "/v1/accounts/101036/transactions"
                            }
                        },
                        "iban": "GB65DEMO60161300101036",
                        "name": "Harry Crisp",
                        "currency": "USD",
                        "details": "Harry Crisp",
                        "bic": "DEMOGBPX",
                        "status": "enabled"
                    }
                }
            },
            "accountListExample1":
            {
                "summary": "Request Without Balance",
                "description": "Response in case of an example, where requested without balance details.\n",
                "value":
                {
                    "accounts": [
                    {
                        "resourceId": "101036",
                        "iban": "GB65DEMO60161300101036",
                        "bban": "101036",
                        "currency": "USD",
                        "name": "Harry Crisp",
                        "product": "Current Account",
                        "details": "Harry Crisp",
                        "balances": [],
                        "_links":
                        {
                            "balances":
                            {
                                "href": "/v1/accounts/101036/balances"
                            },
                            "transactions":
                            {
                                "href": "/v1/accounts/101036/transactions"
                            }
                        }
                    },
                    {
                        "resourceId": "112941",
                        "iban": "GB88DEMO60161300112941",
                        "bban": "112941",
                        "currency": "USD",
                        "name": "Harry Crisp",
                        "product": "Current Account",
                        "details": "Harry Crisp",
                        "balances": [],
                        "_links":
                        {
                            "balances":
                            {
                                "href": "/v1/accounts/112941/balances"
                            },
                            "transactions":
                            {
                                "href": "/v1/accounts/112941/transactions"
                            }
                        }
                    }
    ]
                }
            },
            "accountListExample2":
            {
                "summary": "Request With Balance",
                "description": "Response in case of an example, where requested with balance details.\n",
                "value":
                {
                    "accounts": [
                    {
                        "resourceId": "101036",
                        "iban": "GB65DEMO60161300101036",
                        "bban": "101036",
                        "currency": "USD",
                        "name": "Harry Crisp",
                        "product": "Current Account",
                        "details": "Harry Crisp",
                        "balances": [
                        {
                            "balanceAmount":
                            {
                                "currency": "USD",
                                "amount": "650578.95"
                            },
                            "balanceType": "interimAvailable",
                            "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                            "referenceDate": "2020-04-17",
                            "lastCommittedTransaction": "192787659609917.010001"
                        },
                        {
                            "balanceAmount":
                            {
                                "currency": "USD",
                                "amount": "480591.81"
                            },
                            "balanceType": "openingBooked",
                            "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                            "referenceDate": "2020-04-17",
                            "lastCommittedTransaction": "192787659609917.010001"
                        },
                        {
                            "balanceAmount":
                            {
                                "currency": "USD",
                                "amount": "650578.95"
                            },
                            "balanceType": "closingBooked",
                            "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                            "referenceDate": "2020-04-17",
                            "lastCommittedTransaction": "192787659609917.010001"
                        }
            ],
                        "_links":
                        {
                            "balances":
                            {
                                "href": "/v1/accounts/101036/balances"
                            },
                            "transactions":
                            {
                                "href": "/v1/accounts/101036/transactions"
                            }
                        }
                    },
                    {
                        "resourceId": "112941",
                        "iban": "GB88DEMO60161300112941",
                        "bban": "112941",
                        "currency": "USD",
                        "name": "Harry Crisp",
                        "product": "Current Account",
                        "details": "Harry Crisp",
                        "balances": [
                        {
                            "balanceAmount":
                            {
                                "currency": "USD",
                                "amount": "0"
                            },
                            "balanceType": "interimAvailable",
                            "lastChangeDateTime": ".000Z"
                        },
                        {
                            "balanceAmount":
                            {
                                "currency": "USD",
                                "amount": "0"
                            },
                            "balanceType": "openingBooked",
                            "lastChangeDateTime": ".000Z"
                        }
            ],
                        "_links":
                        {
                            "balances":
                            {
                                "href": "/v1/accounts/112941/balances"
                            },
                            "transactions":
                            {
                                "href": "/v1/accounts/112941/transactions"
                            }
                        }
                    }
    ]
                }
            },
            "startScaProcessResponseExample1":
            {
                "value":
                {
                    "scaStatus": "started",
                    "_links":
                    {
                        "scaStatus":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI201080NQ0MMQFY/authorisations/PI201080NQ0MMQFY-AUTH-1"
                        },
                        "scaRedirect":
                        {
                            "href": "https://www.temenosbank.com/Login"
                        },
                        "self":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI201080NQ0MMQFY/authorisations"
                        },
                        "status":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI201080NQ0MMQFY/status"
                        }
                    }
                }
            },
            "startScaProcessResponseExample2":
            {
                "value":
                {
                    "scaStatus": "finalised",
                    "_links":
                    {
                        "scaStatus":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI2010806T8DDZ0W/cancellation-authorisations/PI2010806T8DDZ0W-CANC-1"
                        },
                        "scaRedirect":
                        {
                            "href": "https://www.temenosbank.com/Login"
                        },
                        "self":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI2010806T8DDZ0W/cancellation-authorisations"
                        },
                        "status":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI2010806T8DDZ0W/status"
                        }
                    }
                }
            },
            "consentsExample_DedicatedAccounts":
            {
                "description": "Consent request on dedicated accounts",
                "value":
                {
                    "access":
                    {
                        "accounts": [
                        {
                            "bban": "101036"
                        }
        ],
                        "balances": [
                        {
                            "iban": "GB87DEMO60161300101125"
                        },
                        {
                            "bban": "101036"
                        }
        ],
                        "transactions": [
                        {
                            "bban": "102172",
                            "currency": "USD"
                        }
        ]
                    },
                    "recurringIndicator": false,
                    "validUntil": "2020-04-30",
                    "frequencyPerDay": 4,
                    "combinedServiceIndicator": false
                }
            },
            "consentsExample_AccountList":
            {
                "description": "Consent on Account List of Available Accounts",
                "value":
                {
                    "access":
                    {
                        "availableAccounts": "allAccounts",
                        "allPsd2": "allAccounts"
                    },
                    "recurringIndicator": false,
                    "validUntil": "2019-04-22",
                    "frequencyPerDay": 4,
                    "combinedServiceIndicator": false
                }
            },
            "consentsCoFExample_Accounts":
            {
                "description": "Consent on Confirmation-of-funds",
                "value":
                {
                    "account":
                    {
                        "bban": "101036",
                        "currency": "USD",
                        "iban": "GB65DEMO60161300101036"
                    },
                    "cardNumber": "1234567891234",
                    "cardExpiryDate": "2020-04-30",
                    "cardInformation": "MyMerchant Loyalty Card",
                    "registrationInformation": "Your contract Number 1234 with MyMerchant is completed with the registration with your bank.",
                    "validUntil": "2020-04-30"
                }
            },
            "consentsInformationResponseExample":
            {
                "description": "Consent request on account list or without indication of accounts",
                "value":
                {
                    "access":
                    {
                        "accounts": [
                        {
                            "iban": "GB65DEMO60161300101036",
                            "bban": "101036",
                            "currency": "USD"
                        }
        ],
                        "balances": [
                        {
                            "iban": "GB88DEMO60161300112941",
                            "bban": "112941",
                            "currency": "USD"
                        }
        ],
                        "transactions": [
                        {
                            "iban": "GB12DEMO60161300101408",
                            "bban": "101408",
                            "currency": "EUR"
                        }
        ]
                    },
                    "recurringIndicator": true,
                    "validUntil": "2020-04-24",
                    "frequencyPerDay": 1,
                    "consentStatus": "valid",
                    "lastActionDate": "2020-04-17"
                }
            },
            "consentsInformationResponseGlobal":
            {
                "description": "Consent request on account list or without indication of accounts",
                "value":
                {
                    "access":
                    {
                        "accounts": [
                        {
                            "iban": "GB85DEMO60161300103101",
                            "bban": "103101",
                            "currency": "USD"
                        }
        ],
                        "balances": [
                        {
                            "iban": "GB85DEMO60161300103101",
                            "bban": "103101",
                            "currency": "USD"
                        }
        ],
                        "transactions": [
                        {
                            "iban": "GB85DEMO60161300103101",
                            "bban": "103101",
                            "currency": "USD"
                        }
        ],
                        "allPsd2": "allAccounts"
                    },
                    "recurringIndicator": true,
                    "validUntil": "2020-04-30",
                    "frequencyPerDay": 1,
                    "consentStatus": "valid",
                    "lastActionDate": "2020-04-17"
                }
            },
            "cofConsentsInformationResponse":
            {
                "description": "Consent request on confirmation-of-funds consent",
                "value":
                {
                    "account":
                    {
                        "iban": "GB65DEMO60161300101036",
                        "bban": "101036",
                        "currency": "USD"
                    },
                    "cardNumber": "4521258730001254",
                    "cardExpiryDate": "2020-05-30",
                    "cardInformation": "MyMerchant Loyalty Card",
                    "registrationInformation": "Your contract Number 4521 with MyMerchant is completed with the registration with your bank",
                    "consentStatus": "received"
                }
            },
            "consentCreationResponse":
            {
                "description": "Response of a consent creation request",
                "value":
                {
                    "consentId": "AAACT201086T8DQ9MB",
                    "_links":
                    {
                        "scaRedirect":
                        {
                            "href": "https://www.temenosbank.com/Login"
                        },
                        "status":
                        {
                            "href": "/v1/consents/AAACT201086T8DQ9MB/status"
                        }
                    },
                    "consentStatus": "received"
                }
            },
            "consentStatusResponseExample1":
            {
                "description": "Response for a consent status request.",
                "value":
                {
                    "consentStatus": "valid"
                }
            },
            "paymentInitiationExample_json_Redirect":
            {
                "description": "Response in case of a redirect with an implicitly created authorisation sub-resource (without charges)",
                "value":
                {
                    "transactionStatus": "RCVD",
                    "_links":
                    {
                        "scaStatus":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI201080NQ0MMQFY/authorisations/PI201080NQ0MMQFY-AUTH-1"
                        },
                        "scaRedirect":
                        {
                            "href": "https://www.temenosbank.com/Login"
                        },
                        "self":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/"
                        },
                        "status":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI201080NQ0MMQFY/status"
                        }
                    },
                    "paymentId": "PI201080NQ0MMQFY",
                    "transactionFeeIndicator": false
                }
            },
            "paymentInitiationExample_json__RedirectExplicitAuthorisation":
            {
                "description": "Response in case of a redirect with an explicit authorisation start (with charges)",
                "value":
                {
                    "transactionStatus": "RCVD",
                    "_links":
                    {
                        "self":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/"
                        },
                        "startAuthorisation":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/BKM2010800134/authorisations"
                        },
                        "status":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/BKM2010800134/status"
                        }
                    },
                    "paymentId": "BKM2010800134",
                    "transactionFeeIndicator": true,
                    "transactionFees":
                    {
                        "amount": "6.59",
                        "currency": "EUR"
                    }
                }
            },
            "paymentsResponse_json":
            {
                "description": "Payment Details Request Response",
                "value":
                {
                    "debtorAccount":
                    {
                        "bban": "101408",
                        "iban": "GB12DEMO60161300101408",
                        "currency": "EUR"
                    },
                    "creditorAddress":
                    {
                    },
                    "creditorName": "Zeus",
                    "transactionStatus": "RCVD",
                    "creditorAccount":
                    {
                        "iban": "GB38DEMO60161300106372",
                        "currency": "GBP"
                    },
                    "instructedAmount":
                    {
                        "amount": "100",
                        "currency": "GBP"
                    },
                    "debtorName": "Harry Crisp",
                    "remittanceInformationUnstructured": "TPS-testing-9"
                }
            },
            "periodicPaymentsResponse_json":
            {
                "description": "Periodic Payment Details Request Response",
                "value":
                {
                    "debtorAccount":
                    {
                        "bban": "101036",
                        "iban": "GB65DEMO60161300101036",
                        "currency": "USD"
                    },
                    "creditorAddress":
                    {
                        "street": "Rue Blue 89 Paris 75000 GB"
                    },
                    "creditorName": "Desmond Miles",
                    "endDate": "2020-06-30",
                    "transactionStatus": "RCVD",
                    "creditorAccount":
                    {
                        "iban": "GB87DEMO60161300101125",
                        "currency": "USD"
                    },
                    "instructedAmount":
                    {
                        "amount": "100.00",
                        "currency": "USD"
                    },
                    "debtorName": "Harry Crisp",
                    "remittanceInformationUnstructured": "Ref Number Merchant",
                    "frequency": "Daily"
                }
            },
            "bulkPaymentsResponse_json":
            {
                "description": "Bulk Payment Details Request Response",
                "value":
                {
                    "transactionStatus": "RCVD",
                    "batchBookingPreferred": false,
                    "debtorAccount":
                    {
                        "iban": "GB65DEMO60161300101036",
                        "bban": "101036",
                        "currency": "USD"
                    },
                    "debtorName": "Harry Crisp",
                    "payments": [
                    {
                        "paymentOrderId": "PI20108007P1Y91R",
                        "creditorName": "Creditor Name Two",
                        "creditorAddress":
                        {
                        },
                        "creditorAccount":
                        {
                            "bban": "101408",
                            "currency": "EUR"
                        },
                        "instructedAmount":
                        {
                            "amount": "120",
                            "currency": "EUR"
                        },
                        "chargeBearer": "SHA",
                        "remittanceInformationUnstructured": "Ref Number Merchant Two"
                    },
                    {
                        "paymentOrderId": "PI20108007P1Y8YL",
                        "creditorName": "Creditor Name One",
                        "creditorAddress":
                        {
                        },
                        "creditorAccount":
                        {
                            "bban": "106372",
                            "currency": "GBP"
                        },
                        "instructedAmount":
                        {
                            "amount": "100",
                            "currency": "GBP"
                        },
                        "chargeBearer": "SHA",
                        "remittanceInformationUnstructured": "Ref Number Merchant One"
                    }
    ]
                }
            },
            "paymentInitiationExample_json_Decoupled":
            {
                "description": "Response in case of the decoupled approach with explicit start of authorisation needed",
                "value":
                {
                    "transactionStatus": "RCVD",
                    "paymentId": "1234-wertiq-983",
                    "_links":
                    {
                        "startAuthorisationWithPsuIdentification":
                        {
                            "href": "/v1/payments/1234-wertiq-983/authorisations"
                        },
                        "self":
                        {
                            "href": "/v1/payments/1234-wertiq-983"
                        }
                    }
                }
            },
            "paymentInitiationExample_json_Embedded":
            {
                "description": "Response in case of the embedded approach with explicit start of authorisation",
                "value":
                {
                    "transactionStatus": "RCVD",
                    "paymentId": "1234-wertiq-983",
                    "_links":
                    {
                        "startAuthenticationWithPsuAuthentication":
                        {
                            "href": "/v1/payments/1234-wertiq-983/authorisations"
                        },
                        "self":
                        {
                            "href": "/v1/payments/1234-wertiq-983"
                        }
                    }
                }
            },
            "paymentInitiationStatusResponse_json_Simple":
            {
                "value":
                {
                    "transactionStatus": "ACSP"
                }
            },
            "paymentInitiationCancelResponseImplicit":
            {
                "value":
                {
                    "transactionStatus": "CANC",
                    "_links":
                    {
                        "scaStatus":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI2010806T8D9TMM/cancellation-authorisations/PI2010806T8D9TMM-CANC-1"
                        },
                        "self":
                        {
                            "href": "/v1/payments/sepa-credit-transfers"
                        },
                        "status":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/PI2010806T8D9TMM/status"
                        }
                    }
                }
            },
            "paymentInitiationCancelResponseExplicit":
            {
                "value":
                {
                    "transactionStatus": "CANC",
                    "_links":
                    {
                        "self":
                        {
                            "href": "/v1/payments/sepa-credit-transfers"
                        },
                        "startAuthorisation":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/BKM2010800134/cancellation-authorisations"
                        },
                        "status":
                        {
                            "href": "/v1/payments/sepa-credit-transfers/BKM2010800134/status"
                        }
                    }
                }
            },
            "updatePsuIdentificationResponseExample_Decoupled_payments":
            {
                "description": "Response of an Update PSU Identification for a payment initiation request for the decoupled approach.",
                "value":
                {
                    "scatransactionStatus": "psuIdentified",
                    "psuMessage": "Please use your BankApp for transaction Authorisation.",
                    "_links":
                    {
                        "scaStatus":
                        {
                            "href": "/v1/payments/qwer3456tzui7890/authorisations/123auth456"
                        }
                    }
                }
            },
            "updatePsuAuthenticationResponseExample_Embedded_payments":
            {
                "description": "Response of an Update PSU Authentication for a consent request for the embedded approach.",
                "value":
                {
                    "scaStatus": "psuAuthenticated",
                    "_links":
                    {
                        "authoriseTransaction":
                        {
                            "href": "/v1/payments/1234-wertiq-983/authorisations/123auth456"
                        }
                    }
                }
            },
            "selectPsuAuthenticationMethodResponseExample_Embedded_payments":
            {
                "description": "Response of a Select PSU Authentication Method payment initiation request for the embedded approach",
                "value":
                {
                    "scaStatus": "scaMethodSelected",
                    "chosenScaMethod":
                    {
                        "authenticationType": "SMS_OTP",
                        "authenticationMethodId": "myAuthenticationID"
                    },
                    "challengeData":
                    {
                        "otpMaxLength": "6",
                        "otpFormat": "integer"
                    },
                    "_links":
                    {
                        "authoriseTransaction":
                        {
                            "href": "/v1/payments/1234-wertiq-983/authorisations/123auth456"
                        }
                    }
                }
            },
            "confirmationOfFundsExample":
            {
                "description": "Request body for a confirmation of funds.",
                "value":
                {
                    "cardNumber": "4521258730001254",
                    "account":
                    {
                        "iban": "GB65DEMO60161300101036"
                    },
                    "payee": "Desmond Miles",
                    "instructedAmount":
                    {
                        "currency": "USD",
                        "amount": "400000"
                    }
                }
            },
            "confirmationOfFundsResponseExample":
            {
                "description": "Response for a confirmation of funds request.",
                "value":
                {
                    "fundsAvailable": "true"
                }
            },
            "AccountBalanceRequest":
            {
                "summary": "Account Balance Request",
                "description": "Response for a read balance request on an account.",
                "value":
                {
                    "account":
                    {
                        "iban": "GB65DEMO60161300101036",
                        "bban": "101036",
                        "currency": "USD"
                    },
                    "balances": [
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "480591.81"
                        },
                        "creditLimitIncluded": false,
                        "balanceType": "closingBooked",
                        "referenceDate": "2020-04-16",
                        "lastCommittedTransaction": "192787659609917.010001"
                    },
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "650578.95"
                        },
                        "creditLimitIncluded": false,
                        "balanceType": "expected",
                        "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                        "referenceDate": "2020-04-17",
                        "lastCommittedTransaction": "192787659609917.010001"
                    },
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "480591.81"
                        },
                        "creditLimitIncluded": false,
                        "balanceType": "openingBooked",
                        "referenceDate": "2020-04-17",
                        "lastCommittedTransaction": "192787659609917.010001"
                    },
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "650578.95"
                        },
                        "creditLimitIncluded": false,
                        "balanceType": "interimBooked",
                        "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                        "referenceDate": "2020-04-17",
                        "lastCommittedTransaction": "192787659609917.010001"
                    },
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "650578.95"
                        },
                        "creditLimitIncluded": false,
                        "balanceType": "interimAvailable",
                        "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                        "referenceDate": "2020-04-17",
                        "lastCommittedTransaction": "192787659609917.010001"
                    },
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "700578.95"
                        },
                        "creditLimitIncluded": true,
                        "balanceType": "interimAvailable",
                        "lastChangeDateTime": "2020-10-11T02:45:00.000Z",
                        "referenceDate": "2020-04-17",
                        "lastCommittedTransaction": "192787659609917.010001"
                    }
    ]
                }
            },
            "transactionListRequest":
            {
                "summary": "Transaction List Request",
                "description": "Transactions listed for requested account",
                "value":
                {
                    "account":
                    {
                        "iban": "GB65DEMO60161300101036"
                    },
                    "transactions":
                    {
                        "booked": [
                        {
                            "_links":
                            {
                                "transactionDetails":
                                {
                                    "href": "/v1/accounts/101036/transactions/194560364648648.010001"
                                }
                            },
                            "transactionId": "194560364648648.010001",
                            "entryReference": "FT201085T9L0",
                            "creditorId": "101036",
                            "bookingDate": "2020-04-17",
                            "valueDate": "2020-04-17",
                            "transactionAmount":
                            {
                                "currency": "USD",
                                "amount": "1095.12"
                            },
                            "creditorName": "Harry Crisp",
                            "creditorAccount":
                            {
                                "bban": "101036",
                                "currency": "USD"
                            },
                            "debtorName": "Harry Crisp",
                            "debtorAccount":
                            {
                                "bban": "101408"
                            },
                            "proprietaryBankTransactionCode": "258"
                        },
                        {
                            "_links":
                            {
                                "transactionDetails":
                                {
                                    "href": "/v1/accounts/101036/transactions/192787659609917.010001"
                                }
                            },
                            "transactionId": "192787659609917.010001",
                            "entryReference": "LD2010803438",
                            "creditorId": "101036",
                            "bookingDate": "2020-04-17",
                            "valueDate": "2020-04-17",
                            "transactionAmount":
                            {
                                "currency": "USD",
                                "amount": "100000"
                            },
                            "creditorName": "Harry Crisp",
                            "creditorAccount":
                            {
                                "bban": "101036",
                                "currency": "USD"
                            },
                            "debtorAccount":
                            {
                            },
                            "proprietaryBankTransactionCode": "402"
                        },
                        {
                            "_links":
                            {
                                "transactionDetails":
                                {
                                    "href": "/v1/accounts/101036/transactions/192789241308117.030001"
                                }
                            },
                            "transactionId": "192789241308117.030001",
                            "entryReference": "BNK20108HLDHKHLG",
                            "creditorId": "101036",
                            "bookingDate": "2020-04-17",
                            "valueDate": "2020-04-17",
                            "transactionAmount":
                            {
                                "currency": "USD",
                                "amount": "19993.57"
                            },
                            "creditorName": "Harry Crisp",
                            "creditorAccount":
                            {
                                "bban": "101036",
                                "currency": "USD"
                            },
                            "debtorName": "PC Way",
                            "debtorAccount":
                            {
                                "bban": "USD1415100010001"
                            },
                            "remittanceInformationUnstructured": "Cust Credit Book with charges",
                            "proprietaryBankTransactionCode": "5028"
                        }
        ],
                        "_links":
                        {
                            "account":
                            {
                                "href": "/v1/accounts/101036"
                            }
                        }
                    },
                    "balances":
                    {
                        "balanceAmount":
                        {
                            "currency": "USD",
                            "amount": "650674.07"
                        },
                        "balanceType": "booked",
                        "lastChangeDateTime": "2021-04-07T08:11:40"
                    }
                }
            },
            "multiCurrencyTransactionListRequest":
            {
                "summary": "Transaction List Request - Cross currency transactions",
                "description": "Cross currency transactions listed for requested account",
                "value":
                {
                    "account":
                    {
                        "iban": "GB12DEMO60161300101408"
                    },
                    "transactions":
                    {
                        "booked": [
                        {
                            "_links":
                            {
                                "transactionDetails":
                                {
                                    "href": "/v1/accounts/101408/transactions/194560364648648.010002"
                                }
                            },
                            "transactionId": "194560364648648.010002",
                            "entryReference": "FT201085T9L0",
                            "creditorId": "101036",
                            "bookingDate": "2020-04-17",
                            "valueDate": "2020-04-17",
                            "transactionAmount":
                            {
                                "currency": "EUR",
                                "amount": "-1000"
                            },
                            "currencyExchange": [
                            {
                                "sourceCurrency": "EUR",
                                "exchangeRate": "1.095122",
                                "targetCurrency": "USD",
                                "quotationDate": "2020-04-17",
                                "contractIdentification": "FT201085T9L0",
                                "unitCurrency": "EUR"
                            }
                ],
                            "creditorName": "Harry Crisp",
                            "creditorAccount":
                            {
                                "bban": "101036"
                            },
                            "debtorName": "Harry Crisp",
                            "debtorAccount":
                            {
                                "bban": "101408",
                                "currency": "EUR"
                            },
                            "proprietaryBankTransactionCode": "213"
                        }
        ],
                        "_links":
                        {
                            "account":
                            {
                                "href": "/v1/accounts/101408"
                            }
                        }
                    },
                    "balances":
                    {
                        "balanceAmount":
                        {
                            "currency": "EUR",
                            "amount": "212.71"
                        },
                        "balanceType": "booked",
                        "lastChangeDateTime": "2021-04-07T08:14:35"
                    }
                }
            },
            "transactionDetails":
            {
                "summary": "Transaction Detail Request",
                "description": "Details of the requested transaction",
                "value":
                {
                    "transactionId": "192789241308117.030001",
                    "entryReference": "BNK20108HLDHKHLG",
                    "bookingDate": "2020-04-17",
                    "valueDate": "2020-04-17",
                    "transactionAmount":
                    {
                        "amount": "19993.57"
                    },
                    "creditorAccount":
                    {
                        "currency": "USD"
                    },
                    "ultimateCreditor": "Harry Crisp",
                    "debtorName": "",
                    "debtorAccount":
                    {
                        "currency": "USD"
                    },
                    "ultimateDebtor": "PC Way",
                    "_links":
                    {
                        "transactionDetails":
                        {
                            "href": "/v1/accounts/101036/transactions/192789241308117.030001"
                        }
                    }
                }
            },
            "crossCurrencyTransactionDetails":
            {
                "summary": "Cross Currency Transaction Detail Request",
                "description": "Details of the requested cross-currency transaction",
                "value":
                {
                    "transactionId": "194560364648648.010002",
                    "entryReference": "FT201085T9L0",
                    "bookingDate": "2020-04-17",
                    "valueDate": "2020-04-17",
                    "transactionAmount":
                    {
                        "currency": "USD",
                        "amount": "-1000"
                    },
                    "currencyExchange": [
                    {
                        "sourceCurrency": "EUR",
                        "exchangeRate": "1.095122",
                        "targetCurrency": "USD",
                        "quotationDate": "2020-04-17",
                        "contractIdentification": "FT201085T9L0",
                        "unitCurrency": "EUR"
                    }
    ],
                    "creditorName": "Harry Crisp",
                    "creditorAccount":
                    {
                        "iban": "GB65DEMO60161300101036",
                        "bban": "101036",
                        "currency": "USD"
                    },
                    "ultimateCreditor": "Harry Crisp",
                    "debtorName": "Harry Crisp",
                    "debtorAccount":
                    {
                        "iban": "GB12DEMO60161300101408",
                        "bban": "101408",
                        "currency": "EUR"
                    },
                    "ultimateDebtor": "Harry Crisp",
                    "_links":
                    {
                        "transactionDetails":
                        {
                            "href": "/v1/accounts/101408/transactions/194560364648648.010002"
                        }
                    }
                }
            },
            "authorisationListExample":
            {
                "value":
                {
                    "authorisationIds": [
            "PI2010806T8DDZ0W-AUTH-1"
          ]
                }
            },
            "cancellationListExample":
            {
                "value":
                {
                    "cancellationIds": [
            "PI2010806T8DDZ0W-CANC-1"
          ]
                }
            }
        }
    },
    "tags": [
    {
        "name": "Payment Initiation Service (PIS)",
        "description": "The Decription for Payment Initiation Service (PIS) offers the following services:\n  * Initiation and update of a payment request\n  * Status information of a payment\n"
    },
    {
        "name": "Account Information Service (AIS)",
        "description": "The Account Information Service (AIS) offers the following services\n  * Transaction reports for a given account or card account including balances if applicable.\n  * Balances of a given account or card account ,\n  * A list of available accounts or card account ,\n  * Account details of a given account or card account or of the list of all accessible accounts or card account  relative to a granted consent\n"
    },
    {
        "name": "Confirmation of Funds Service (CBPII)",
        "description": "Confirmation of Funds Service (CBPII) returns a confirmation of funds request at the ASPSP.\n"
    }
  ]
}